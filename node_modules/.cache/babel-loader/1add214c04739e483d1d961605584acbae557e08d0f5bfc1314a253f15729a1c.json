{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\audioList\\\\AudioList.jsx\",\n  _s = $RefreshSig$();\n// AudioList.js\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useAudioContext } from \"../AudioContext\";\nimport \"./AudioList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioList = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    setCurrentTrack,\n    isPlaying,\n    togglePlay,\n    setIsPlaying,\n    currentTrackIndex,\n    setCurrentTrackIndex,\n    updateAudioFiles,\n    localAudioFiles,\n    audioRef,\n    clearAudioFiles,\n    currentPlaylistId,\n    setPlaylistId\n  } = useAudioContext();\n  const [isLocalPlaying, setIsLocalPlaying] = useState(false);\n  useEffect(() => {\n    setPlaylistId(id);\n    if (id && currentPlaylistId !== id) {\n      fetch(`http://localhost:8080/api/playlists/${id}`, {\n        method: \"GET\"\n      }).then(response => response.json()).then(data => updateAudioFiles(data)).catch(error => console.error(\"Error fetching data:\", error));\n    }\n  }, [id]);\n  useEffect(() => {\n    setIsLocalPlaying(isPlaying);\n  }, [isPlaying]);\n  const handleTogglePlay = () => {\n    if (isLocalPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsLocalPlaying(!isLocalPlaying);\n    togglePlay();\n  };\n  const handlePlayAudio = async (audioFile, index) => {\n    if (currentPlaylistId !== id) {\n      setPlaylistId(id);\n    }\n    if (currentTrackIndex === index) {\n      handleTogglePlay();\n    } else {\n      try {\n        const response = await fetch(`http://localhost:8080/api/audio/${audioFile.id}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const blob = await response.blob();\n        const audioData = URL.createObjectURL(new Blob([blob]));\n        setCurrentTrackIndex(index);\n        setCurrentTrack({\n          id: audioFile.id,\n          audioUrl: audioData,\n          trackName: audioFile.title,\n          author: audioFile.author,\n          imageUrl: audioFile.image ? `data:image/jpeg;base64,${audioFile.image.data}` : \"\",\n          duration: audioFile.duration\n        });\n        setIsPlaying(true);\n      } catch (error) {\n        console.error(\"Error fetching audio:\", error);\n      }\n    }\n  };\n  function formatDuration(duration) {\n    const hours = Math.floor(duration / 3600);\n    const minutes = Math.floor(duration % 3600 / 60);\n    const seconds = Math.floor(duration % 60);\n    let formattedTime = \"\";\n    if (hours > 0) {\n      formattedTime += hours + \":\";\n    }\n    if (hours > 0 && minutes < 10) {\n      formattedTime += \"0\";\n    }\n    formattedTime += String(minutes).padStart(hours > 0 ? 2 : 1, \"0\") + \":\";\n    formattedTime += String(seconds).padStart(2, \"0\");\n    return formattedTime;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-list\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(localAudioFiles) && localAudioFiles.map((audioFile, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-metadata-container\",\n          children: [audioFile.image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/jpeg;base64,${audioFile.image.data}`,\n            alt: audioFile.title,\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"play_pause\",\n              onClick: () => handlePlayAudio(audioFile, index),\n              children: currentTrackIndex === index && isPlaying ? \"||\" : \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: audioFile.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: audioFile.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"duration-container\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"duration\",\n              children: formatDuration(audioFile.duration)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)\n      }, audioFile.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioList, \"qgbjMDcqDSQMYzDMlRXVPVPtOss=\", false, function () {\n  return [useParams, useAudioContext];\n});\n_c = AudioList;\nexport default AudioList;\nvar _c;\n$RefreshReg$(_c, \"AudioList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useAudioContext","jsxDEV","_jsxDEV","AudioList","_s","id","setCurrentTrack","isPlaying","togglePlay","setIsPlaying","currentTrackIndex","setCurrentTrackIndex","updateAudioFiles","localAudioFiles","audioRef","clearAudioFiles","currentPlaylistId","setPlaylistId","isLocalPlaying","setIsLocalPlaying","fetch","method","then","response","json","data","catch","error","console","handleTogglePlay","current","pause","play","handlePlayAudio","audioFile","index","ok","Error","status","blob","audioData","URL","createObjectURL","Blob","audioUrl","trackName","title","author","imageUrl","image","duration","formatDuration","hours","Math","floor","minutes","seconds","formattedTime","String","padStart","className","children","Array","isArray","map","src","alt","loading","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/audioList/AudioList.jsx"],"sourcesContent":["// AudioList.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAudioContext } from \"../AudioContext\";\r\nimport \"./AudioList.css\";\r\n\r\nconst AudioList = () => {\r\n  const { id } = useParams();\r\n  const {\r\n    setCurrentTrack,\r\n    isPlaying,\r\n    togglePlay,\r\n    setIsPlaying,\r\n    currentTrackIndex,\r\n    setCurrentTrackIndex,\r\n    updateAudioFiles,\r\n    localAudioFiles,\r\n    audioRef,\r\n    clearAudioFiles,\r\n    currentPlaylistId,\r\n    setPlaylistId,\r\n  } = useAudioContext();\r\n\r\n  const [isLocalPlaying, setIsLocalPlaying] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setPlaylistId(id);\r\n    if (id && currentPlaylistId !== id) {\r\n      fetch(`http://localhost:8080/api/playlists/${id}`, { method: \"GET\" })\r\n        .then((response) => response.json())\r\n        .then((data) => updateAudioFiles(data))\r\n        .catch((error) => console.error(\"Error fetching data:\", error));\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    setIsLocalPlaying(isPlaying);\r\n  }, [isPlaying]);\r\n\r\n  const handleTogglePlay = () => {\r\n    if (isLocalPlaying) {\r\n      audioRef.current.pause();\r\n    } else {\r\n      audioRef.current.play();\r\n    }\r\n    setIsLocalPlaying(!isLocalPlaying);\r\n    togglePlay();\r\n  };\r\n\r\n  const handlePlayAudio = async (audioFile, index) => {\r\n    if (currentPlaylistId !== id) {\r\n      setPlaylistId(id);\r\n    }\r\n    if (currentTrackIndex === index) {\r\n      handleTogglePlay();\r\n    } else {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:8080/api/audio/${audioFile.id}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const blob = await response.blob();\r\n        const audioData = URL.createObjectURL(new Blob([blob]));\r\n\r\n        setCurrentTrackIndex(index);\r\n        setCurrentTrack({\r\n          id: audioFile.id,\r\n          audioUrl: audioData,\r\n          trackName: audioFile.title,\r\n          author: audioFile.author,\r\n          imageUrl: audioFile.image\r\n            ? `data:image/jpeg;base64,${audioFile.image.data}`\r\n            : \"\",\r\n          duration: audioFile.duration,\r\n        });\r\n        setIsPlaying(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching audio:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  function formatDuration(duration) {\r\n    const hours = Math.floor(duration / 3600);\r\n    const minutes = Math.floor((duration % 3600) / 60);\r\n    const seconds = Math.floor(duration % 60);\r\n\r\n    let formattedTime = \"\";\r\n    if (hours > 0) {\r\n      formattedTime += hours + \":\";\r\n    }\r\n    if (hours > 0 && minutes < 10) {\r\n      formattedTime += \"0\";\r\n    }\r\n    formattedTime += String(minutes).padStart(hours > 0 ? 2 : 1, \"0\") + \":\";\r\n    formattedTime += String(seconds).padStart(2, \"0\");\r\n\r\n    return formattedTime;\r\n  }\r\n\r\n  return (\r\n    <div className=\"audio-list\">\r\n      <ul>\r\n        {Array.isArray(localAudioFiles) &&\r\n          localAudioFiles.map((audioFile, index) => (\r\n            <li key={audioFile.id}>\r\n              <div className=\"audio-metadata-container\">\r\n                {audioFile.image && (\r\n                  <img\r\n                    src={`data:image/jpeg;base64,${audioFile.image.data}`}\r\n                    alt={audioFile.title}\r\n                    loading=\"lazy\"\r\n                  />\r\n                )}\r\n                <div className=\"button-container\">\r\n                  <button\r\n                    className=\"play_pause\"\r\n                    onClick={() => handlePlayAudio(audioFile, index)}\r\n                  >\r\n                    {currentTrackIndex === index && isPlaying ? \"||\" : \">\"}\r\n                  </button>\r\n                </div>\r\n                <div className=\"title-author-container\">\r\n                  <span className=\"title\">{audioFile.title}</span>\r\n                  <span>{audioFile.author}</span>\r\n                </div>\r\n                <div className=\"duration-container\">\r\n                  <span className=\"duration\">\r\n                    {formatDuration(audioFile.duration)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}