{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\audioControls\\\\AudioControls.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useAudioContext } from \"../AudioContext\";\nimport \"./AudioControls.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioControls = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    currentTrack,\n    isPlaying,\n    togglePlay,\n    volume,\n    audioRef,\n    setVolume,\n    debouncedPlayNextTrack,\n    debouncedPlayPreviousTrack,\n    currentTrackIndex,\n    audioFiles,\n    currentPlaylistId\n  } = useAudioContext();\n  const [currentTime, setCurrentTime] = useState(0);\n  const prevAudioUrl = useRef(null);\n  useEffect(() => {\n    if (currentTrack) {\n      if (prevAudioUrl.current !== currentTrack.audioUrl || currentPlaylistId !== id) {\n        // Если изменилась ссылка на аудио или плейлист, обновляем данные\n        audioRef.current.src = currentTrack.audioUrl;\n        prevAudioUrl.current = currentTrack.audioUrl;\n      }\n    }\n  }, [currentTrack, currentPlaylistId, id]);\n  useEffect(() => {\n    const updateTime = () => {\n      setCurrentTime(audioRef.current.currentTime);\n    };\n    const interval = setInterval(updateTime, 100); // Обновляем текущее время каждые 100 миллисекунд\n\n    return () => clearInterval(interval);\n  }, [audioRef]);\n  useEffect(() => {\n    if (currentTrack) {\n      audioRef.current.src = currentTrack.audioUrl;\n    }\n  }, [currentTrack]);\n  const handleTogglePlay = () => {\n    if (currentTrackIndex !== -1) {\n      if (isPlaying) {\n        audioRef.current.pause(); // Пауза воспроизведения\n      } else {\n        audioRef.current.play(); // Возобновление воспроизведения\n      }\n      togglePlay(); // Переключение состояния воспроизведения\n    }\n  };\n  useEffect(() => {\n    audioRef.current.volume = volume;\n  }, [volume]);\n  useEffect(() => {\n    const handleAudioEnded = () => {\n      // Проверяем, является ли текущий трек последним в списке треков\n      if (currentTrackIndex === audioFiles.length - 1) {\n        // Если текущий трек последний, ставим проигрывание на паузу\n        togglePlay();\n      } else {\n        // Если текущий трек не последний, включаем следующий трек\n        debouncedPlayNextTrack();\n      }\n    };\n    audioRef.current.addEventListener(\"ended\", handleAudioEnded);\n    return () => {\n      audioRef.current.removeEventListener(\"ended\", handleAudioEnded);\n    };\n  }, [debouncedPlayNextTrack, togglePlay, audioRef, currentTrackIndex, audioFiles]);\n  function formatDuration(duration) {\n    const hours = Math.floor(duration / 3600);\n    const minutes = Math.floor(duration % 3600 / 60);\n    const seconds = Math.floor(duration % 60);\n    let formattedTime = \"\";\n    if (hours > 0) {\n      formattedTime += hours + \":\";\n    }\n    if (hours > 0 && minutes < 10) {\n      formattedTime += \"0\";\n    }\n    formattedTime += String(minutes).padStart(hours > 0 ? 2 : 1, \"0\") + \":\";\n    formattedTime += String(seconds).padStart(2, \"0\");\n    return formattedTime;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-controls\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meta-data\",\n        children: currentTrack ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"audioImage2\",\n            src: currentTrack.imageUrl,\n            alt: currentTrack.trackName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: currentTrack.trackName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"author\",\n              children: currentTrack.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"audioImage2\",\n            src: \"note.png\",\n            alt: \"Track\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Track Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"author\",\n              children: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"previous\",\n          onClick: debouncedPlayPreviousTrack,\n          disabled: !audioFiles.length || currentTrackIndex === 0,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-backward\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play-pause\",\n          onClick: handleTogglePlay,\n          children: currentTrackIndex !== -1 && isPlaying ? \"||\" : \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next\",\n          onClick: debouncedPlayNextTrack,\n          disabled: !audioFiles.length || currentTrackIndex === audioFiles.length - 1,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-forward\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-time\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: currentTrack ? formatDuration(currentTime) : \"0:00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          id: \"customAudioPlayer\",\n          ref: audioRef,\n          controls: true,\n          autoPlay: isPlaying,\n          type: \"audio/mpeg\",\n          children: \"Your browser does not support the audio element.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"duration\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: currentTrack ? formatDuration(currentTrack.duration) : \"0:00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"volume\",\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: volume,\n          onChange: e => setVolume(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioControls, \"imUQlAymwaqsoV7VANZzly/QwH0=\", false, function () {\n  return [useParams, useAudioContext];\n});\n_c = AudioControls;\nexport default AudioControls;\nvar _c;\n$RefreshReg$(_c, \"AudioControls\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","useAudioContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioControls","_s","id","currentTrack","isPlaying","togglePlay","volume","audioRef","setVolume","debouncedPlayNextTrack","debouncedPlayPreviousTrack","currentTrackIndex","audioFiles","currentPlaylistId","currentTime","setCurrentTime","prevAudioUrl","current","audioUrl","src","updateTime","interval","setInterval","clearInterval","handleTogglePlay","pause","play","handleAudioEnded","length","addEventListener","removeEventListener","formatDuration","duration","hours","Math","floor","minutes","seconds","formattedTime","String","padStart","className","children","imageUrl","alt","trackName","fileName","_jsxFileName","lineNumber","columnNumber","author","onClick","disabled","ref","controls","autoPlay","type","min","max","step","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/audioControls/AudioControls.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAudioContext } from \"../AudioContext\";\r\nimport \"./AudioControls.css\";\r\n\r\nconst AudioControls = () => {\r\n  const { id } = useParams();\r\n\r\n  const {\r\n    currentTrack,\r\n    isPlaying,\r\n    togglePlay,\r\n    volume,\r\n    audioRef,\r\n    setVolume,\r\n    debouncedPlayNextTrack,\r\n    debouncedPlayPreviousTrack,\r\n    currentTrackIndex,\r\n    audioFiles,\r\n    currentPlaylistId\r\n  } = useAudioContext();\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n\r\n  const prevAudioUrl = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (currentTrack) {\r\n      if (prevAudioUrl.current !== currentTrack.audioUrl || currentPlaylistId !== id) {\r\n        // Если изменилась ссылка на аудио или плейлист, обновляем данные\r\n        audioRef.current.src = currentTrack.audioUrl;\r\n        prevAudioUrl.current = currentTrack.audioUrl;\r\n      }\r\n    }\r\n  }, [currentTrack, currentPlaylistId, id]);\r\n\r\n  useEffect(() => {\r\n    const updateTime = () => {\r\n      setCurrentTime(audioRef.current.currentTime);\r\n    };\r\n\r\n    const interval = setInterval(updateTime, 100); // Обновляем текущее время каждые 100 миллисекунд\r\n\r\n    return () => clearInterval(interval);\r\n  }, [audioRef]);\r\n\r\n  useEffect(() => {\r\n    if (currentTrack) {\r\n      audioRef.current.src = currentTrack.audioUrl;\r\n    }\r\n  }, [currentTrack]);\r\n\r\n  const handleTogglePlay = () => {\r\n    if (currentTrackIndex !== -1) {\r\n      if (isPlaying) {\r\n        audioRef.current.pause(); // Пауза воспроизведения\r\n      } else {\r\n        audioRef.current.play(); // Возобновление воспроизведения\r\n      }\r\n      togglePlay(); // Переключение состояния воспроизведения\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    audioRef.current.volume = volume;\r\n  }, [volume]);\r\n\r\n  useEffect(() => {\r\n    const handleAudioEnded = () => {\r\n      // Проверяем, является ли текущий трек последним в списке треков\r\n      if (currentTrackIndex === audioFiles.length - 1) {\r\n        // Если текущий трек последний, ставим проигрывание на паузу\r\n        togglePlay();\r\n      } else {\r\n        // Если текущий трек не последний, включаем следующий трек\r\n        debouncedPlayNextTrack();\r\n      }\r\n    };\r\n\r\n    audioRef.current.addEventListener(\"ended\", handleAudioEnded);\r\n\r\n    return () => {\r\n      audioRef.current.removeEventListener(\"ended\", handleAudioEnded);\r\n    };\r\n  }, [\r\n    debouncedPlayNextTrack,\r\n    togglePlay,\r\n    audioRef,\r\n    currentTrackIndex,\r\n    audioFiles,\r\n  ]);\r\n\r\n  function formatDuration(duration) {\r\n    const hours = Math.floor(duration / 3600);\r\n    const minutes = Math.floor((duration % 3600) / 60);\r\n    const seconds = Math.floor(duration % 60);\r\n\r\n    let formattedTime = \"\";\r\n    if (hours > 0) {\r\n      formattedTime += hours + \":\";\r\n    }\r\n    if (hours > 0 && minutes < 10) {\r\n      formattedTime += \"0\";\r\n    }\r\n    formattedTime += String(minutes).padStart(hours > 0 ? 2 : 1, \"0\") + \":\";\r\n    formattedTime += String(seconds).padStart(2, \"0\");\r\n\r\n    return formattedTime;\r\n  }\r\n\r\n  return (\r\n    <div className=\"audio-controls\">\r\n      <div className=\"custom-controls\">\r\n        <div className=\"meta-data\">\r\n          {currentTrack ? (\r\n            <>\r\n              <img\r\n                id=\"audioImage2\"\r\n                src={currentTrack.imageUrl}\r\n                alt={currentTrack.trackName}\r\n              />\r\n              <div className=\"title-author\">\r\n                <span className=\"title\">{currentTrack.trackName}</span>\r\n                <span className=\"author\">{currentTrack.author}</span>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img id=\"audioImage2\" src=\"note.png\" alt=\"Track\" />\r\n              <div className=\"title-author\">\r\n                <span className=\"title\">Track Name</span>\r\n                <span className=\"author\">Author</span>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"controls-container\">\r\n          <button\r\n            className=\"previous\"\r\n            onClick={debouncedPlayPreviousTrack}\r\n            disabled={!audioFiles.length || currentTrackIndex === 0}\r\n          >\r\n            <i className=\"fas fa-backward\"></i>\r\n          </button>\r\n          <button className=\"play-pause\" onClick={handleTogglePlay}>\r\n            {currentTrackIndex !== -1 && isPlaying ? \"||\" : \">\"}\r\n          </button>\r\n          <button\r\n            className=\"next\"\r\n            onClick={debouncedPlayNextTrack}\r\n            disabled={\r\n              !audioFiles.length || currentTrackIndex === audioFiles.length - 1\r\n            }\r\n          >\r\n            <i className=\"fas fa-forward\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"timeline-container\">\r\n          <div className=\"current-time\">\r\n            <span>{currentTrack ? formatDuration(currentTime) : \"0:00\"}</span>\r\n          </div>\r\n          <audio\r\n            id=\"customAudioPlayer\"\r\n            ref={audioRef}\r\n            controls\r\n            autoPlay={isPlaying}\r\n            type=\"audio/mpeg\"\r\n          >\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n          <div className=\"duration\">\r\n            <span>\r\n              {currentTrack ? formatDuration(currentTrack.duration) : \"0:00\"}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"volume-container\">\r\n          <input\r\n            className=\"volume\"\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.01\"\r\n            value={volume}\r\n            onChange={(e) => setVolume(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioControls;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}