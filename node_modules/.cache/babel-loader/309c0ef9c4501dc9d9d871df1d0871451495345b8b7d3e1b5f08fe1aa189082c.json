{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\audioList\\\\AudioList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport AudioContext from '../../AudioContext';\nimport './AudioList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioList = () => {\n  _s();\n  const {\n    currentTrack,\n    setCurrentTrack,\n    isPlaying,\n    setIsPlaying,\n    volume,\n    setVolume\n  } = useContext(AudioContext);\n  const [audioFiles, setAudioFiles] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8080/audio', {\n      method: 'GET'\n    }).then(response => response.json()).then(data => setAudioFiles(data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  // {\n  //   /* Кривое кэширование */\n  // }\n  // // useEffect(() => {\n  // //   const cachedAudioFiles = localStorage.getItem(\"cachedAudioFiles\");\n\n  // //   if (cachedAudioFiles) {\n  // //     setAudioFiles(JSON.parse(cachedAudioFiles));\n  // //   } else {\n  // //     fetch(\"http://localhost:8080/audio\", { method: \"GET\" })\n  // //       .then((response) => response.json())\n  // //       .then((data) => {\n  // //         setAudioFiles(data);\n  // //         localStorage.setItem(\"cachedAudioFiles\", JSON.stringify(data));\n  // //       })\n  // //       .catch((error) => console.error(\"Error fetching data:\", error));\n  // //   }\n  // // }, []);\n\n  const handlePlayAudio = async (audioId, trackName, author, imageUrl) => {\n    if (currentTrack && currentTrack.id === audioId) {\n      setIsPlaying(!isPlaying);\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play();\n      }\n    } else {\n      try {\n        const response = await fetch(`http://localhost:8080/audio/${audioId}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const blob = await response.blob();\n        const audioData = URL.createObjectURL(new Blob([blob]));\n\n        // if (!hideAudioControls) {\n        //   handleHideAudioControls();\n        //   setHideAudioControls(true);\n        // }\n\n        // Пробуем предварительно загрузить следующий трек\n        const nextIndex = audioFiles.findIndex(file => file.id === audioId) + 1;\n        if (nextIndex < audioFiles.length) {\n          const nextResponse = await fetch(`http://localhost:8080/audio/${audioFiles[nextIndex].id}`);\n          if (!nextResponse.ok) {\n            throw new Error(`HTTP error! status: ${nextResponse.status}`);\n          }\n          const nextBlob = await nextResponse.blob();\n          const nextAudioData = URL.createObjectURL(new Blob([nextBlob]));\n\n          // Предварительно сохраняем следующий трек для использования при окончании текущего\n          setNextTrack({\n            id: audioFiles[nextIndex].id,\n            audioUrl: nextAudioData,\n            trackName: audioFiles[nextIndex].title,\n            author: audioFiles[nextIndex].author,\n            imageUrl: `data:image/jpeg;base64,${audioFiles[nextIndex].image.data}`\n          });\n        }\n        setCurrentTrack({\n          id: audioId,\n          audioUrl: audioData,\n          trackName,\n          author,\n          imageUrl\n        });\n        setIsPlaying(true);\n        setVolume(1);\n      } catch (error) {\n        console.error(\"Error fetching audio:\", error);\n      }\n    }\n  };\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = volume;\n      audioRef.current.addEventListener(\"ended\", () => {\n        if (nextTrack) {\n          setCurrentTrack(nextTrack);\n          setNextTrack(null); // Сбрасываем следующий трек после использования\n        }\n      });\n    }\n  }, [audioFiles, currentTrack, handlePlayAudio, volume, nextTrack]);\n  const handleHideAudioControls = () => {\n    toggleAudioControls();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-list\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: audioFiles.map(audioFile => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-metadata-container\",\n          children: [audioFile.image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/jpeg;base64,${audioFile.image.data}`,\n            alt: audioFile.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"play_pause\",\n              onClick: () => handlePlayAudio(audioFile.id, audioFile.title, audioFile.author, `data:image/jpeg;base64,${audioFile.image.data}`),\n              children: currentTrack && currentTrack.id === audioFile.id && isPlaying ? \"||\" : \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: audioFile.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: audioFile.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"duration-conteiner\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"duration\",\n              children: audioFile.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, audioFile.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioList, \"P+IWBWaUXlVpLRFtVoqAzbGY+UM=\");\n_c = AudioList;\nexport default AudioList;\nvar _c;\n$RefreshReg$(_c, \"AudioList\");","map":{"version":3,"names":["React","useContext","useEffect","useState","AudioContext","jsxDEV","_jsxDEV","AudioList","_s","currentTrack","setCurrentTrack","isPlaying","setIsPlaying","volume","setVolume","audioFiles","setAudioFiles","fetch","method","then","response","json","data","catch","error","console","handlePlayAudio","audioId","trackName","author","imageUrl","id","audioRef","current","pause","play","ok","Error","status","blob","audioData","URL","createObjectURL","Blob","nextIndex","findIndex","file","length","nextResponse","nextBlob","nextAudioData","setNextTrack","audioUrl","title","image","addEventListener","nextTrack","handleHideAudioControls","toggleAudioControls","className","children","map","audioFile","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","duration","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/audioList/AudioList.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport AudioContext from '../../AudioContext';\r\nimport './AudioList.css';\r\n\r\nconst AudioList = () => {\r\n  const { currentTrack, setCurrentTrack, isPlaying, setIsPlaying, volume, setVolume } = useContext(AudioContext);\r\n  const [audioFiles, setAudioFiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/audio', { method: 'GET' })\r\n      .then((response) => response.json())\r\n      .then((data) => setAudioFiles(data))\r\n      .catch((error) => console.error('Error fetching data:', error));\r\n  }, []);\r\n\r\n\r\n  // {\r\n  //   /* Кривое кэширование */\r\n  // }\r\n  // // useEffect(() => {\r\n  // //   const cachedAudioFiles = localStorage.getItem(\"cachedAudioFiles\");\r\n\r\n  // //   if (cachedAudioFiles) {\r\n  // //     setAudioFiles(JSON.parse(cachedAudioFiles));\r\n  // //   } else {\r\n  // //     fetch(\"http://localhost:8080/audio\", { method: \"GET\" })\r\n  // //       .then((response) => response.json())\r\n  // //       .then((data) => {\r\n  // //         setAudioFiles(data);\r\n  // //         localStorage.setItem(\"cachedAudioFiles\", JSON.stringify(data));\r\n  // //       })\r\n  // //       .catch((error) => console.error(\"Error fetching data:\", error));\r\n  // //   }\r\n  // // }, []);\r\n\r\n  const handlePlayAudio = async (audioId, trackName, author, imageUrl) => {\r\n    if (currentTrack && currentTrack.id === audioId) {\r\n      setIsPlaying(!isPlaying);\r\n      if (isPlaying) {\r\n        audioRef.current.pause();\r\n      } else {\r\n        audioRef.current.play();\r\n      }\r\n    } else {\r\n      try {\r\n        const response = await fetch(`http://localhost:8080/audio/${audioId}`);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const blob = await response.blob();\r\n        const audioData = URL.createObjectURL(new Blob([blob]));\r\n\r\n        // if (!hideAudioControls) {\r\n        //   handleHideAudioControls();\r\n        //   setHideAudioControls(true);\r\n        // }\r\n\r\n        // Пробуем предварительно загрузить следующий трек\r\n        const nextIndex =\r\n          audioFiles.findIndex((file) => file.id === audioId) + 1;\r\n        if (nextIndex < audioFiles.length) {\r\n          const nextResponse = await fetch(\r\n            `http://localhost:8080/audio/${audioFiles[nextIndex].id}`\r\n          );\r\n          if (!nextResponse.ok) {\r\n            throw new Error(`HTTP error! status: ${nextResponse.status}`);\r\n          }\r\n          const nextBlob = await nextResponse.blob();\r\n          const nextAudioData = URL.createObjectURL(new Blob([nextBlob]));\r\n\r\n          // Предварительно сохраняем следующий трек для использования при окончании текущего\r\n          setNextTrack({\r\n            id: audioFiles[nextIndex].id,\r\n            audioUrl: nextAudioData,\r\n            trackName: audioFiles[nextIndex].title,\r\n            author: audioFiles[nextIndex].author,\r\n            imageUrl: `data:image/jpeg;base64,${audioFiles[nextIndex].image.data}`,\r\n          });\r\n        }\r\n\r\n        setCurrentTrack({\r\n          id: audioId,\r\n          audioUrl: audioData,\r\n          trackName,\r\n          author,\r\n          imageUrl,\r\n        });\r\n        setIsPlaying(true);\r\n        setVolume(1);\r\n      } catch (error) {\r\n        console.error(\"Error fetching audio:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.volume = volume;\r\n      audioRef.current.addEventListener(\"ended\", () => {\r\n        if (nextTrack) {\r\n          setCurrentTrack(nextTrack);\r\n          setNextTrack(null); // Сбрасываем следующий трек после использования\r\n        }\r\n      });\r\n    }\r\n  }, [audioFiles, currentTrack, handlePlayAudio, volume, nextTrack]);\r\n\r\n  const handleHideAudioControls = () => {\r\n    toggleAudioControls();\r\n  };\r\n\r\n  return (\r\n    <div className=\"audio-list\">\r\n      <ul>\r\n        {audioFiles.map((audioFile) => (\r\n          <li key={audioFile.id}>\r\n            <div className=\"audio-metadata-container\">\r\n              {audioFile.image && (\r\n                <img\r\n                  src={`data:image/jpeg;base64,${audioFile.image.data}`}\r\n                  alt={audioFile.title}\r\n                />\r\n              )}\r\n              <div className=\"button-container\">\r\n                <button\r\n                  className=\"play_pause\"\r\n                  onClick={() =>\r\n                    handlePlayAudio(\r\n                      audioFile.id,\r\n                      audioFile.title,\r\n                      audioFile.author,\r\n                      `data:image/jpeg;base64,${audioFile.image.data}`\r\n                    )\r\n                  }\r\n                >\r\n                  {currentTrack && currentTrack.id === audioFile.id && isPlaying\r\n                    ? \"||\"\r\n                    : \">\"}\r\n                </button>\r\n              </div>\r\n              <div className=\"title-author-container\">\r\n                <span className=\"title\">{audioFile.title}</span>\r\n                <span>{audioFile.author}</span>\r\n              </div>\r\n              <div className=\"duration-conteiner\">\r\n                <span className=\"duration\">{audioFile.duration}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}