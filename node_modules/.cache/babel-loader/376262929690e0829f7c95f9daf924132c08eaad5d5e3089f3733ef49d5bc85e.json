{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\audioList\\\\AudioList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useAudioContext } from \"../AudioContext\";\nimport \"./AudioList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioList = () => {\n  _s();\n  const {\n    currentTrack,\n    setCurrentTrack,\n    isPlaying,\n    setIsPlaying,\n    togglePlay,\n    currentTrackIndex,\n    setCurrentTrackIndex,\n    audioFiles,\n    audioRef\n  } = useAudioContext();\n  useEffect(() => {\n    fetch(\"http://localhost:8080/audio\", {\n      method: \"GET\"\n    }).then(response => response.json()).then(data => setCurrentAudioFiles(data)).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  const setCurrentAudioFiles = data => {\n    if (data && data.length > 0) {\n      setCurrentTrackIndex(0);\n      setCurrentTrack({\n        id: data[0].id,\n        audioUrl: data[0].audioUrl,\n        trackName: data[0].title,\n        author: data[0].author,\n        imageUrl: data[0].image ? `data:image/jpeg;base64,${data[0].image.data}` : \"\"\n      });\n    }\n  };\n  const handleTogglePlay = () => {\n    if (!audioRef.current.src && currentTrack) {\n      audioRef.current.src = currentTrack.audioUrl;\n    }\n    if (isPlaying) {\n      const currentTime = audioRef.current.currentTime;\n      audioRef.current.pause();\n      audioRef.current.currentTime = currentTime;\n    } else {\n      audioRef.current.play().catch(error => {\n        console.error(\"Error playing audio:\", error);\n      });\n    }\n    togglePlay();\n  };\n  const handlePlayAudio = (audioFile, index) => {\n    if (currentTrackIndex === index && isPlaying) {\n      togglePlay();\n    } else {\n      setCurrentTrackIndex(index);\n      setCurrentTrack({\n        id: audioFile.id,\n        audioUrl: audioFile.audioUrl,\n        trackName: audioFile.title,\n        author: audioFile.author,\n        imageUrl: audioFile.image ? `data:image/jpeg;base64,${audioFile.image.data}` : \"\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-list\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: audioFiles.map((audioFile, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-metadata-container\",\n          children: [audioFile.image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/jpeg;base64,${audioFile.image.data}`,\n            alt: audioFile.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"play_pause\",\n              onClick: () => {\n                handlePlayAudio(audioFile, index);\n                handleTogglePlay();\n              },\n              children: currentTrackIndex === index ? isPlaying ? \"||\" : \">\" : \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: audioFile.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: audioFile.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"duration-container\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"duration\",\n              children: audioFile.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, audioFile.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioList, \"uofAjfFsiGXQSu8mcR5G6MslK4E=\", false, function () {\n  return [useAudioContext];\n});\n_c = AudioList;\nexport default AudioList;\nvar _c;\n$RefreshReg$(_c, \"AudioList\");","map":{"version":3,"names":["React","useEffect","useAudioContext","jsxDEV","_jsxDEV","AudioList","_s","currentTrack","setCurrentTrack","isPlaying","setIsPlaying","togglePlay","currentTrackIndex","setCurrentTrackIndex","audioFiles","audioRef","fetch","method","then","response","json","data","setCurrentAudioFiles","catch","error","console","length","id","audioUrl","trackName","title","author","imageUrl","image","handleTogglePlay","current","src","currentTime","pause","play","handlePlayAudio","audioFile","index","className","children","map","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","duration","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/audioList/AudioList.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useAudioContext } from \"../AudioContext\";\r\nimport \"./AudioList.css\";\r\n\r\nconst AudioList = () => {\r\n  const {\r\n    currentTrack,\r\n    setCurrentTrack,\r\n    isPlaying,\r\n    setIsPlaying,\r\n    togglePlay,\r\n    currentTrackIndex,\r\n    setCurrentTrackIndex,\r\n    audioFiles,\r\n    audioRef,\r\n  } = useAudioContext();\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/audio\", { method: \"GET\" })\r\n      .then((response) => response.json())\r\n      .then((data) => setCurrentAudioFiles(data))\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n  }, []);\r\n\r\n  const setCurrentAudioFiles = (data) => {\r\n    if (data && data.length > 0) {\r\n      setCurrentTrackIndex(0);\r\n      setCurrentTrack({\r\n        id: data[0].id,\r\n        audioUrl: data[0].audioUrl,\r\n        trackName: data[0].title,\r\n        author: data[0].author,\r\n        imageUrl: data[0].image\r\n          ? `data:image/jpeg;base64,${data[0].image.data}`\r\n          : \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleTogglePlay = () => {\r\n    if (!audioRef.current.src && currentTrack) {\r\n      audioRef.current.src = currentTrack.audioUrl;\r\n    }\r\n    if (isPlaying) {\r\n      const currentTime = audioRef.current.currentTime;\r\n      audioRef.current.pause();\r\n      audioRef.current.currentTime = currentTime;\r\n    } else {\r\n      audioRef.current.play().catch((error) => {\r\n        console.error(\"Error playing audio:\", error);\r\n      });\r\n    }\r\n    togglePlay();\r\n  };\r\n\r\n  const handlePlayAudio = (audioFile, index) => {\r\n    if (currentTrackIndex === index && isPlaying) {\r\n      togglePlay();\r\n    } else {\r\n      setCurrentTrackIndex(index);\r\n      setCurrentTrack({\r\n        id: audioFile.id,\r\n        audioUrl: audioFile.audioUrl,\r\n        trackName: audioFile.title,\r\n        author: audioFile.author,\r\n        imageUrl: audioFile.image\r\n          ? `data:image/jpeg;base64,${audioFile.image.data}`\r\n          : \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"audio-list\">\r\n      <ul>\r\n        {audioFiles.map((audioFile, index) => (\r\n          <li key={audioFile.id}>\r\n            <div className=\"audio-metadata-container\">\r\n              {audioFile.image && (\r\n                <img\r\n                  src={`data:image/jpeg;base64,${audioFile.image.data}`}\r\n                  alt={audioFile.title}\r\n                />\r\n              )}\r\n              <div className=\"button-container\">\r\n                <button\r\n                  className=\"play_pause\"\r\n                  onClick={() => {\r\n                    handlePlayAudio(audioFile, index);\r\n                    handleTogglePlay();\r\n                  }}\r\n                >\r\n                  {currentTrackIndex === index ? (isPlaying ? \"||\" : \">\") : \">\"}\r\n                </button>\r\n              </div>\r\n              <div className=\"title-author-container\">\r\n                <span className=\"title\">{audioFile.title}</span>\r\n                <span>{audioFile.author}</span>\r\n              </div>\r\n              <div className=\"duration-container\">\r\n                <span className=\"duration\">{audioFile.duration}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}