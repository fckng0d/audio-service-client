{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\playlistContainer\\\\PlaylistContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAudioContext } from \"../AudioContext\"; // Импортируем контекст AudioContext\nimport \"./PlaylistContainer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaylistContainer = () => {\n  _s();\n  const [playlists, setPlaylists] = useState([]);\n  const {\n    clearAudioFiles\n  } = useAudioContext(); // Получаем функцию clearAudioFiles из контекста\n\n  useEffect(() => {\n    // Здесь вы можете выполнить запрос к серверу для получения списка плейлистов\n    // Пример:\n    fetch(\"http://localhost:8080/api/playlists\").then(response => response.json()).then(data => setPlaylists(data)).catch(error => console.error(\"Error fetching playlists:\", error));\n\n    // Обнуляем содержимое AudioList при монтировании компонента\n    clearAudioFiles();\n  }, [clearAudioFiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-list\",\n      children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"200px\",\n          height: \"200px\",\n          border: \"black solid 2px\",\n          borderRadius: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/playlists/${playlist.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playlist-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: playlist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Author: \", playlist.author]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Tracks: \", playlist.countOfAudio]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Duration: \", playlist.duration]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, playlist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaylistContainer, \"Bmniqmm4nki/3WYngdHe228IEk8=\", false, function () {\n  return [useAudioContext];\n});\n_c = PlaylistContainer;\nexport default PlaylistContainer;\nvar _c;\n$RefreshReg$(_c, \"PlaylistContainer\");","map":{"version":3,"names":["React","useState","useEffect","Link","useAudioContext","jsxDEV","_jsxDEV","PlaylistContainer","_s","playlists","setPlaylists","clearAudioFiles","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","playlist","style","width","height","border","borderRadius","to","id","name","author","countOfAudio","duration","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/playlistContainer/PlaylistContainer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAudioContext } from \"../AudioContext\"; // Импортируем контекст AudioContext\r\nimport \"./PlaylistContainer.css\";\r\n\r\nconst PlaylistContainer = () => {\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const { clearAudioFiles } = useAudioContext(); // Получаем функцию clearAudioFiles из контекста\r\n\r\n  useEffect(() => {\r\n    // Здесь вы можете выполнить запрос к серверу для получения списка плейлистов\r\n    // Пример:\r\n    fetch(\"http://localhost:8080/api/playlists\")\r\n      .then((response) => response.json())\r\n      .then((data) => setPlaylists(data))\r\n      .catch((error) => console.error(\"Error fetching playlists:\", error));\r\n\r\n    // Обнуляем содержимое AudioList при монтировании компонента\r\n    clearAudioFiles();\r\n  }, [clearAudioFiles]);\r\n\r\n  return (\r\n    <div className=\"playlist-container\">\r\n      <h2>Playlists</h2>\r\n      <div className=\"playlist-list\">\r\n        {playlists.map((playlist) => (\r\n          <div\r\n            key={playlist.id}\r\n            style={{\r\n              width: \"200px\",\r\n              height: \"200px\",\r\n              border: \"black solid 2px\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n          >\r\n            <Link to={`/playlists/${playlist.id}`}>\r\n              <div className=\"playlist-item\">\r\n                <h3>{playlist.name}</h3>\r\n                <p>Author: {playlist.author}</p>\r\n                <p>Tracks: {playlist.countOfAudio}</p>\r\n                <p>Duration: {playlist.duration}</p>\r\n                {/* Здесь можно добавить другие детали плейлиста */}\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaylistContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}