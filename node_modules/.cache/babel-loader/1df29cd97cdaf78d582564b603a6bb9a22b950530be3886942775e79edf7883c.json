{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\audioList\\\\AudioList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useAudioContext } from \"../AudioContext\";\nimport \"./AudioList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioList = () => {\n  _s();\n  const {\n    currentTrack,\n    setCurrentTrack,\n    isPlaying,\n    setIsPlaying,\n    togglePlay,\n    currentTrackIndex,\n    setCurrentTrackIndex,\n    updateAudioFiles,\n    audioFiles,\n    audioRef\n  } = useAudioContext();\n  const [isLoadingAudio, setIsLoadingAudio] = useState(false);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/audio\", {\n      method: \"GET\"\n    }).then(response => response.json()).then(data => updateAudioFiles(data)).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  const handlePlayAudio = async (audioFile, index) => {\n    if (isLoadingAudio) return; // Если уже загружается аудио, выходим\n\n    setIsLoadingAudio(true); // Устанавливаем флаг загрузки аудио\n\n    try {\n      const response = await fetch(`http://localhost:8080/audio/${audioFile.id}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const blob = await response.blob();\n      const audioData = URL.createObjectURL(new Blob([blob]));\n      setCurrentTrackIndex(index);\n      setCurrentTrack({\n        id: audioFile.id,\n        audioUrl: audioData,\n        trackName: audioFile.title,\n        author: audioFile.author,\n        imageUrl: audioFile.image ? `data:image/jpeg;base64,${audioFile.image.data}` : \"\"\n      });\n      // Не начинаем воспроизведение здесь\n    } catch (error) {\n      console.error(\"Error fetching audio:\", error);\n    } finally {\n      setIsLoadingAudio(false); // Сбрасываем флаг загрузки аудио после завершения запроса\n    }\n  };\n  const handleTogglePlay = () => {\n    if (isPlaying) {\n      const currentTime = audioRef.current.currentTime; // Сохраняем текущее время воспроизведения\n      audioRef.current.pause(); // Пауза воспроизведения\n      audioRef.current.currentTime = currentTime; // Устанавливаем сохраненное время воспроизведения\n    } else {\n      audioRef.current.play(); // Возобновление воспроизведения\n    }\n    togglePlay(); // Переключение состояния воспроизведения\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-list\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: audioFiles.map((audioFile, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-metadata-container\",\n          children: [audioFile.image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/jpeg;base64,${audioFile.image.data}`,\n            alt: audioFile.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"play_pause\",\n              onClick: () => {\n                handlePlayAudio(audioFile, index);\n                handleTogglePlay(); // Вызываем обработчик только для переключения состояния воспроизведения\n              },\n              children: currentTrackIndex === index ? isPlaying ? \"||\" : \">\" : \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: audioFile.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: audioFile.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"duration-container\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"duration\",\n              children: audioFile.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, audioFile.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioList, \"m5f8KqrXFgZfVur5yY+8oKxsgGw=\", false, function () {\n  return [useAudioContext];\n});\n_c = AudioList;\nexport default AudioList;\nvar _c;\n$RefreshReg$(_c, \"AudioList\");","map":{"version":3,"names":["React","useEffect","useState","useAudioContext","jsxDEV","_jsxDEV","AudioList","_s","currentTrack","setCurrentTrack","isPlaying","setIsPlaying","togglePlay","currentTrackIndex","setCurrentTrackIndex","updateAudioFiles","audioFiles","audioRef","isLoadingAudio","setIsLoadingAudio","fetch","method","then","response","json","data","catch","error","console","handlePlayAudio","audioFile","index","id","ok","Error","status","blob","audioData","URL","createObjectURL","Blob","audioUrl","trackName","title","author","imageUrl","image","handleTogglePlay","currentTime","current","pause","play","className","children","map","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","duration","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/audioList/AudioList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useAudioContext } from \"../AudioContext\";\r\nimport \"./AudioList.css\";\r\n\r\nconst AudioList = () => {\r\n  const {\r\n    currentTrack,\r\n    setCurrentTrack,\r\n    isPlaying,\r\n    setIsPlaying,\r\n    togglePlay,\r\n    currentTrackIndex,\r\n    setCurrentTrackIndex,\r\n    updateAudioFiles,\r\n    audioFiles,\r\n    audioRef,\r\n  } = useAudioContext();\r\n\r\n  const [isLoadingAudio, setIsLoadingAudio] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/audio\", { method: \"GET\" })\r\n      .then((response) => response.json())\r\n      .then((data) => updateAudioFiles(data))\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n  }, []);\r\n\r\n  const handlePlayAudio = async (audioFile, index) => {\r\n    if (isLoadingAudio) return; // Если уже загружается аудио, выходим\r\n  \r\n    setIsLoadingAudio(true); // Устанавливаем флаг загрузки аудио\r\n  \r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8080/audio/${audioFile.id}`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const blob = await response.blob();\r\n      const audioData = URL.createObjectURL(new Blob([blob]));\r\n  \r\n      setCurrentTrackIndex(index);\r\n      setCurrentTrack({\r\n        id: audioFile.id,\r\n        audioUrl: audioData,\r\n        trackName: audioFile.title,\r\n        author: audioFile.author,\r\n        imageUrl: audioFile.image\r\n          ? `data:image/jpeg;base64,${audioFile.image.data}`\r\n          : \"\",\r\n      });\r\n      // Не начинаем воспроизведение здесь\r\n    } catch (error) {\r\n      console.error(\"Error fetching audio:\", error);\r\n    } finally {\r\n      setIsLoadingAudio(false); // Сбрасываем флаг загрузки аудио после завершения запроса\r\n    }\r\n  };\r\n  \r\n  const handleTogglePlay = () => {\r\n    if (isPlaying) {\r\n      const currentTime = audioRef.current.currentTime; // Сохраняем текущее время воспроизведения\r\n      audioRef.current.pause(); // Пауза воспроизведения\r\n      audioRef.current.currentTime = currentTime; // Устанавливаем сохраненное время воспроизведения\r\n    } else {\r\n      audioRef.current.play(); // Возобновление воспроизведения\r\n    }\r\n    togglePlay(); // Переключение состояния воспроизведения\r\n  };\r\n\r\n  return (\r\n    <div className=\"audio-list\">\r\n      <ul>\r\n        {audioFiles.map((audioFile, index) => (\r\n          <li key={audioFile.id}>\r\n            <div className=\"audio-metadata-container\">\r\n              {audioFile.image && (\r\n                <img\r\n                  src={`data:image/jpeg;base64,${audioFile.image.data}`}\r\n                  alt={audioFile.title}\r\n                />\r\n              )}\r\n              <div className=\"button-container\">\r\n                <button\r\n                  className=\"play_pause\"\r\n                  onClick={() => {\r\n                    handlePlayAudio(audioFile, index);\r\n                    handleTogglePlay(); // Вызываем обработчик только для переключения состояния воспроизведения\r\n                  }}\r\n                >\r\n                  {currentTrackIndex === index\r\n                    ? isPlaying\r\n                      ? \"||\"\r\n                      : \">\"\r\n                    : \">\"}\r\n                </button>\r\n              </div>\r\n              <div className=\"title-author-container\">\r\n                <span className=\"title\">{audioFile.title}</span>\r\n                <span>{audioFile.author}</span>\r\n              </div>\r\n              <div className=\"duration-container\">\r\n                <span className=\"duration\">{audioFile.duration}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,iBAAiB;AACjD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IACJC,YAAY;IACZC,eAAe;IACfC,SAAS;IACTC,YAAY;IACZC,UAAU;IACVC,iBAAiB;IACjBC,oBAAoB;IACpBC,gBAAgB;IAChBC,UAAU;IACVC;EACF,CAAC,GAAGd,eAAe,CAAC,CAAC;EAErB,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE3DD,SAAS,CAAC,MAAM;IACdmB,KAAK,CAAC,6BAA6B,EAAE;MAAEC,MAAM,EAAE;IAAM,CAAC,CAAC,CACpDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKV,gBAAgB,CAACU,IAAI,CAAC,CAAC,CACtCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,eAAe,GAAG,MAAAA,CAAOC,SAAS,EAAEC,KAAK,KAAK;IAClD,IAAIb,cAAc,EAAE,OAAO,CAAC;;IAE5BC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEzB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMH,KAAK,CACzB,+BAA8BU,SAAS,CAACE,EAAG,EAC9C,CAAC;MACD,IAAI,CAACT,QAAQ,CAACU,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBX,QAAQ,CAACY,MAAO,EAAC,CAAC;MAC3D;MACA,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACa,IAAI,CAAC,CAAC;MAClC,MAAMC,SAAS,GAAGC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACJ,IAAI,CAAC,CAAC,CAAC;MAEvDtB,oBAAoB,CAACiB,KAAK,CAAC;MAC3BtB,eAAe,CAAC;QACduB,EAAE,EAAEF,SAAS,CAACE,EAAE;QAChBS,QAAQ,EAAEJ,SAAS;QACnBK,SAAS,EAAEZ,SAAS,CAACa,KAAK;QAC1BC,MAAM,EAAEd,SAAS,CAACc,MAAM;QACxBC,QAAQ,EAAEf,SAAS,CAACgB,KAAK,GACpB,0BAAyBhB,SAAS,CAACgB,KAAK,CAACrB,IAAK,EAAC,GAChD;MACN,CAAC,CAAC;MACF;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,SAAS;MACRR,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5B;EACF,CAAC;EAED,MAAM4B,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIrC,SAAS,EAAE;MACb,MAAMsC,WAAW,GAAG/B,QAAQ,CAACgC,OAAO,CAACD,WAAW,CAAC,CAAC;MAClD/B,QAAQ,CAACgC,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;MAC1BjC,QAAQ,CAACgC,OAAO,CAACD,WAAW,GAAGA,WAAW,CAAC,CAAC;IAC9C,CAAC,MAAM;MACL/B,QAAQ,CAACgC,OAAO,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3B;IACAvC,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,oBACEP,OAAA;IAAK+C,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBhD,OAAA;MAAAgD,QAAA,EACGrC,UAAU,CAACsC,GAAG,CAAC,CAACxB,SAAS,EAAEC,KAAK,kBAC/B1B,OAAA;QAAAgD,QAAA,eACEhD,OAAA;UAAK+C,SAAS,EAAC,0BAA0B;UAAAC,QAAA,GACtCvB,SAAS,CAACgB,KAAK,iBACdzC,OAAA;YACEkD,GAAG,EAAG,0BAAyBzB,SAAS,CAACgB,KAAK,CAACrB,IAAK,EAAE;YACtD+B,GAAG,EAAE1B,SAAS,CAACa;UAAM;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CACF,eACDvD,OAAA;YAAK+C,SAAS,EAAC,kBAAkB;YAAAC,QAAA,eAC/BhD,OAAA;cACE+C,SAAS,EAAC,YAAY;cACtBS,OAAO,EAAEA,CAAA,KAAM;gBACbhC,eAAe,CAACC,SAAS,EAAEC,KAAK,CAAC;gBACjCgB,gBAAgB,CAAC,CAAC,CAAC,CAAC;cACtB,CAAE;cAAAM,QAAA,EAEDxC,iBAAiB,KAAKkB,KAAK,GACxBrB,SAAS,GACP,IAAI,GACJ,GAAG,GACL;YAAG;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACNvD,OAAA;YAAK+C,SAAS,EAAC,wBAAwB;YAAAC,QAAA,gBACrChD,OAAA;cAAM+C,SAAS,EAAC,OAAO;cAAAC,QAAA,EAAEvB,SAAS,CAACa;YAAK;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAChDvD,OAAA;cAAAgD,QAAA,EAAOvB,SAAS,CAACc;YAAM;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eACNvD,OAAA;YAAK+C,SAAS,EAAC,oBAAoB;YAAAC,QAAA,eACjChD,OAAA;cAAM+C,SAAS,EAAC,UAAU;cAAAC,QAAA,EAAEvB,SAAS,CAACgC;YAAQ;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GA9BC9B,SAAS,CAACE,EAAE;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA+BjB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrD,EAAA,CA3GID,SAAS;EAAA,QAYTH,eAAe;AAAA;AAAA4D,EAAA,GAZfzD,SAAS;AA6Gf,eAAeA,SAAS;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}