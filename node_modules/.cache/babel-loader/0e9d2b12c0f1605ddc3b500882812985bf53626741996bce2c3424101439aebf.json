{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\audioControls\\\\AudioControls.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { useAudioContext } from \"../AudioContext\";\nimport \"./AudioControls.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioControls = () => {\n  _s();\n  const {\n    currentTrack,\n    isPlaying,\n    volume,\n    setVolume,\n    audioRef,\n    audioFiles,\n    currentTrackIndex,\n    setCurrentTrackIndex,\n    setCurrentTrack\n  } = useAudioContext();\n  useEffect(() => {\n    const audioElement = audioRef.current;\n    const handleEnded = async () => {\n      // Проверяем, есть ли следующий трек в списке\n      if (currentTrackIndex < audioFiles.length - 1) {\n        const nextTrackIndex = currentTrackIndex + 1;\n        const nextTrack = audioFiles[nextTrackIndex];\n        // const nextAudioData = `data:image/jpeg;base64,${nextTrack.image.data}`;\n\n        const nextIndex = audioFiles.findIndex(file => file.id === currentTrackIndex) + 1;\n        const nextResponse = await fetch(`http://localhost:8080/audio/${audioFiles[nextIndex].id}`);\n        if (!nextResponse.ok) {\n          throw new Error(`HTTP error! status: ${nextResponse.status}`);\n        }\n        const nextBlob = await nextResponse.blob();\n        const nextAudioData = URL.createObjectURL(new Blob([nextBlob]));\n        if (nextIndex < audioFiles.length) {\n          const nextResponse = await fetch(`http://localhost:8080/audio/${audioFiles[nextIndex].id}`);\n          if (!nextResponse.ok) {\n            throw new Error(`HTTP error! status: ${nextResponse.status}`);\n          }\n          const nextBlob = await nextResponse.blob();\n          const nextAudioData = URL.createObjectURL(new Blob([nextBlob]));\n          setCurrentTrackIndex(nextTrackIndex);\n          setCurrentTrack({\n            id: audioFiles[nextIndex].id,\n            audioUrl: nextAudioData,\n            trackName: audioFiles[nextIndex].title,\n            author: audioFiles[nextIndex].author,\n            imageUrl: `data:image/jpeg;base64,${audioFiles[nextIndex].image.data}`\n          });\n          // Предварительно сохраняем следующий трек для использования при окончании текущего\n        }\n        // Воспроизводим следующий трек\n        audioElement.play();\n      } else {\n        // Если достигнут конец списка, останавливаем воспроизведение\n        setCurrentTrack(null);\n        setCurrentTrackIndex(-1);\n        audioElement.pause();\n      }\n    };\n    audioElement.addEventListener(\"ended\", handleEnded);\n    return () => {\n      audioElement.removeEventListener(\"ended\", handleEnded);\n    };\n  }, [currentTrackIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-controls\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meta-data\",\n        children: currentTrack ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"audioImage2\",\n            src: currentTrack.imageUrl,\n            alt: \"track cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: currentTrack.trackName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"author\",\n              children: currentTrack.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"audioImage2\",\n            src: \"\",\n            alt: \"track cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Track Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"author\",\n              children: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        id: \"customAudioPlayer\",\n        ref: audioRef,\n        src: currentTrack ? currentTrack.audioUrl : \"\",\n        controls: true,\n        autoPlay: isPlaying,\n        type: \"audio/mpeg\",\n        children: \"Your browser does not support the audio element.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"volume\",\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: volume,\n          onChange: e => setVolume(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioControls, \"xuLRgmz3ACZmsaYoV0ShCUZHyXo=\", false, function () {\n  return [useAudioContext];\n});\n_c = AudioControls;\nexport default AudioControls;\nvar _c;\n$RefreshReg$(_c, \"AudioControls\");","map":{"version":3,"names":["React","useEffect","useRef","useAudioContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioControls","_s","currentTrack","isPlaying","volume","setVolume","audioRef","audioFiles","currentTrackIndex","setCurrentTrackIndex","setCurrentTrack","audioElement","current","handleEnded","length","nextTrackIndex","nextTrack","nextIndex","findIndex","file","id","nextResponse","fetch","ok","Error","status","nextBlob","blob","nextAudioData","URL","createObjectURL","Blob","audioUrl","trackName","title","author","imageUrl","image","data","play","pause","addEventListener","removeEventListener","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","controls","autoPlay","type","min","max","step","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/audioControls/AudioControls.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useAudioContext } from \"../AudioContext\";\r\nimport \"./AudioControls.css\";\r\n\r\nconst AudioControls = () => {\r\n  const {\r\n    currentTrack,\r\n    isPlaying,\r\n    volume,\r\n    setVolume,\r\n    audioRef,\r\n    audioFiles,\r\n    currentTrackIndex,\r\n    setCurrentTrackIndex,\r\n    setCurrentTrack,\r\n  } = useAudioContext();\r\n\r\n  useEffect(() => {\r\n    const audioElement = audioRef.current;\r\n\r\n    const handleEnded = async () => {\r\n      // Проверяем, есть ли следующий трек в списке\r\n      if (currentTrackIndex < audioFiles.length - 1) {\r\n        const nextTrackIndex = currentTrackIndex + 1;\r\n        const nextTrack = audioFiles[nextTrackIndex];\r\n        // const nextAudioData = `data:image/jpeg;base64,${nextTrack.image.data}`;\r\n\r\n      \r\n        \r\n\r\n        const nextIndex =\r\n          audioFiles.findIndex((file) => file.id === currentTrackIndex) + 1;\r\n\r\n          const nextResponse = await fetch(\r\n            `http://localhost:8080/audio/${audioFiles[nextIndex].id}`\r\n          );\r\n          if (!nextResponse.ok) {\r\n            throw new Error(`HTTP error! status: ${nextResponse.status}`);\r\n          }\r\n          const nextBlob = await nextResponse.blob();\r\n          const nextAudioData = URL.createObjectURL(new Blob([nextBlob]));\r\n        if (nextIndex < audioFiles.length) {\r\n          const nextResponse = await fetch(\r\n            `http://localhost:8080/audio/${audioFiles[nextIndex].id}`\r\n          );\r\n          if (!nextResponse.ok) {\r\n            throw new Error(`HTTP error! status: ${nextResponse.status}`);\r\n          }\r\n          const nextBlob = await nextResponse.blob();\r\n          const nextAudioData = URL.createObjectURL(new Blob([nextBlob]));\r\n\r\n          setCurrentTrackIndex(nextTrackIndex);\r\n          setCurrentTrack({\r\n            id: audioFiles[nextIndex].id,\r\n            audioUrl: nextAudioData,\r\n            trackName: audioFiles[nextIndex].title,\r\n            author: audioFiles[nextIndex].author,\r\n            imageUrl: `data:image/jpeg;base64,${audioFiles[nextIndex].image.data}`,\r\n          });\r\n          // Предварительно сохраняем следующий трек для использования при окончании текущего\r\n        }\r\n        // Воспроизводим следующий трек\r\n        audioElement.play();\r\n      } else {\r\n        // Если достигнут конец списка, останавливаем воспроизведение\r\n        setCurrentTrack(null);\r\n        setCurrentTrackIndex(-1);\r\n        audioElement.pause();\r\n      }\r\n    };\r\n\r\n    audioElement.addEventListener(\"ended\", handleEnded);\r\n\r\n    return () => {\r\n      audioElement.removeEventListener(\"ended\", handleEnded);\r\n    };\r\n  }, [currentTrackIndex]);\r\n\r\n  return (\r\n    <div className=\"audio-controls\">\r\n      <div className=\"custom-controls\">\r\n        <div className=\"meta-data\">\r\n          {currentTrack ? (\r\n            <>\r\n              <img\r\n                id=\"audioImage2\"\r\n                src={currentTrack.imageUrl}\r\n                alt=\"track cover\"\r\n              />\r\n              <div className=\"title-author\">\r\n                <span className=\"title\">{currentTrack.trackName}</span>\r\n                <span className=\"author\">{currentTrack.author}</span>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img id=\"audioImage2\" src=\"\" alt=\"track cover\" />\r\n              <div className=\"title-author\">\r\n                <span className=\"title\">Track Name</span>\r\n                <span className=\"author\">Author</span>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <audio\r\n          id=\"customAudioPlayer\"\r\n          ref={audioRef}\r\n          src={currentTrack ? currentTrack.audioUrl : \"\"}\r\n          controls\r\n          autoPlay={isPlaying}\r\n          type=\"audio/mpeg\"\r\n        >\r\n          Your browser does not support the audio element.\r\n        </audio>\r\n        <div className=\"volume-container\">\r\n          <input\r\n            className=\"volume\"\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.01\"\r\n            value={volume}\r\n            onChange={(e) => setVolume(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioControls;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}