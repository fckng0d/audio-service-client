{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\audioList\\\\AudioList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useAudioContext } from \"../AudioContext\";\nimport \"./AudioList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioList = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    setCurrentTrack,\n    isPlaying,\n    togglePlay,\n    setIsPlaying,\n    currentTrackIndex,\n    setCurrentTrackIndex,\n    audioRef,\n    clearAudioFiles,\n    currentPlaylistId,\n    setCurrentPlaylistId\n  } = useAudioContext();\n\n  // Состояние для аудиофайлов текущего плейлиста\n  const [currentPlaylistAudioFiles, setCurrentPlaylistAudioFiles] = useState([]);\n  useEffect(() => {\n    if (currentTrackIndex === -1 && id && typeof id === \"string\" && currentPlaylistId !== id) {\n      setCurrentPlaylistId(id);\n      fetch(`http://localhost:8080/api/playlists/${id}`, {\n        method: \"GET\"\n      }).then(response => response.json()).then(data => setCurrentPlaylistAudioFiles(data)) // Обновляем аудиофайлы текущего плейлиста\n      .catch(error => console.error(\"Error fetching data:\", error));\n    }\n  }, [id, currentPlaylistId]);\n  const handlePlayAudio = async (audioFile, index) => {\n    if (currentPlaylistId !== id) {\n      setCurrentPlaylistId(id);\n    }\n    if (currentTrackIndex === index) {\n      togglePlay();\n    } else {\n      try {\n        const response = await fetch(`http://localhost:8080/api/audio/${audioFile.id}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const blob = await response.blob();\n        const audioData = URL.createObjectURL(new Blob([blob]));\n        setCurrentTrackIndex(index);\n        setCurrentTrack({\n          id: audioFile.id,\n          audioUrl: audioData,\n          trackName: audioFile.title,\n          author: audioFile.author,\n          imageUrl: audioFile.image ? `data:image/jpeg;base64,${audioFile.image.data}` : \"\",\n          duration: audioFile.duration\n        });\n        setIsPlaying(true);\n      } catch (error) {\n        console.error(\"Error fetching audio:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-list\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(currentPlaylistAudioFiles) && currentPlaylistAudioFiles.map((audioFile, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-metadata-container\",\n          children: [audioFile.image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/jpeg;base64,${audioFile.image.data}`,\n            alt: audioFile.title,\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"play_pause\",\n              onClick: () => handlePlayAudio(audioFile, index),\n              children: currentTrackIndex === index && isPlaying ? \"||\" : \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: audioFile.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: audioFile.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"duration-container\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"duration\",\n              children: formatDuration(audioFile.duration)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)\n      }, audioFile.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioList, \"nZ0za0lm5HQhGeO1A4ihS0sCGUs=\", false, function () {\n  return [useParams, useAudioContext];\n});\n_c = AudioList;\nexport default AudioList;\nvar _c;\n$RefreshReg$(_c, \"AudioList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useAudioContext","jsxDEV","_jsxDEV","AudioList","_s","id","setCurrentTrack","isPlaying","togglePlay","setIsPlaying","currentTrackIndex","setCurrentTrackIndex","audioRef","clearAudioFiles","currentPlaylistId","setCurrentPlaylistId","currentPlaylistAudioFiles","setCurrentPlaylistAudioFiles","fetch","method","then","response","json","data","catch","error","console","handlePlayAudio","audioFile","index","ok","Error","status","blob","audioData","URL","createObjectURL","Blob","audioUrl","trackName","title","author","imageUrl","image","duration","className","children","Array","isArray","map","src","alt","loading","fileName","_jsxFileName","lineNumber","columnNumber","onClick","formatDuration","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/audioList/AudioList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\"; \r\nimport { useAudioContext } from \"../AudioContext\";\r\nimport \"./AudioList.css\";\r\n\r\nconst AudioList = () => {\r\n  const { id } = useParams(); \r\n  const {\r\n    setCurrentTrack,\r\n    isPlaying,\r\n    togglePlay,\r\n    setIsPlaying,\r\n    currentTrackIndex,\r\n    setCurrentTrackIndex,\r\n    audioRef,\r\n    clearAudioFiles,\r\n    currentPlaylistId,\r\n    setCurrentPlaylistId,\r\n  } = useAudioContext();\r\n  \r\n  // Состояние для аудиофайлов текущего плейлиста\r\n  const [currentPlaylistAudioFiles, setCurrentPlaylistAudioFiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      currentTrackIndex === -1 &&\r\n      id &&\r\n      typeof id === \"string\" &&\r\n      currentPlaylistId !== id\r\n    ) {\r\n      setCurrentPlaylistId(id); \r\n      fetch(`http://localhost:8080/api/playlists/${id}`, { method: \"GET\" })\r\n        .then((response) => response.json())\r\n        .then((data) => setCurrentPlaylistAudioFiles(data)) // Обновляем аудиофайлы текущего плейлиста\r\n        .catch((error) => console.error(\"Error fetching data:\", error));\r\n    }\r\n  }, [id, currentPlaylistId]);\r\n\r\n  const handlePlayAudio = async (audioFile, index) => {\r\n    if (currentPlaylistId !== id) {\r\n      setCurrentPlaylistId(id);\r\n    }\r\n    if (currentTrackIndex === index) {\r\n      togglePlay();\r\n    } else {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:8080/api/audio/${audioFile.id}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const blob = await response.blob();\r\n        const audioData = URL.createObjectURL(new Blob([blob]));\r\n\r\n        setCurrentTrackIndex(index);\r\n        setCurrentTrack({\r\n          id: audioFile.id,\r\n          audioUrl: audioData,\r\n          trackName: audioFile.title,\r\n          author: audioFile.author,\r\n          imageUrl: audioFile.image\r\n            ? `data:image/jpeg;base64,${audioFile.image.data}`\r\n            : \"\",\r\n          duration: audioFile.duration,\r\n        });\r\n        setIsPlaying(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching audio:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"audio-list\">\r\n      <ul>\r\n        {Array.isArray(currentPlaylistAudioFiles) &&\r\n          currentPlaylistAudioFiles.map((audioFile, index) => (\r\n            <li key={audioFile.id}>\r\n              <div className=\"audio-metadata-container\">\r\n                {audioFile.image && (\r\n                  <img\r\n                    src={`data:image/jpeg;base64,${audioFile.image.data}`}\r\n                    alt={audioFile.title}\r\n                    loading=\"lazy\"\r\n                  />\r\n                )}\r\n                <div className=\"button-container\">\r\n                  <button\r\n                    className=\"play_pause\"\r\n                    onClick={() => handlePlayAudio(audioFile, index)}\r\n                  >\r\n                    {currentTrackIndex === index && isPlaying ? \"||\" : \">\"}\r\n                  </button>\r\n                </div>\r\n                <div className=\"title-author-container\">\r\n                  <span className=\"title\">{audioFile.title}</span>\r\n                  <span>{audioFile.author}</span>\r\n                </div>\r\n                <div className=\"duration-container\">\r\n                  <span className=\"duration\">\r\n                    {formatDuration(audioFile.duration)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}