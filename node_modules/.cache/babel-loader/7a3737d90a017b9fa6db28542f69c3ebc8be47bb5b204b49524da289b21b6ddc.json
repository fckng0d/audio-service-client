{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\audioControls\\\\AudioControls.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { useAudioContext } from \"../AudioContext\";\nimport \"./AudioControls.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioControls = () => {\n  _s();\n  const {\n    currentTrack,\n    isPlaying,\n    volume,\n    audioRef,\n    setIsPlaying,\n    setVolume,\n    audioFiles,\n    currentTrackIndex,\n    setCurrentTrackIndex,\n    setCurrentTrack\n  } = useAudioContext();\n\n  // Function to play the next track\n  const playNextTrack = () => {\n    if (audioFiles.length > 0) {\n      let nextIndex = (currentTrackIndex + 1) % audioFiles.length;\n      setCurrentTrackIndex(nextIndex);\n      const nextTrack = audioFiles[nextIndex];\n      setCurrentTrack({\n        id: nextTrack.id,\n        audioUrl: nextTrack.audioUrl,\n        trackName: nextTrack.title,\n        author: nextTrack.author,\n        imageUrl: nextTrack.imageUrl\n      });\n      setIsPlaying(true);\n    }\n  };\n\n  // Set up the onEnded event listener for the audio element\n  useEffect(() => {\n    const audioElement = audioRef.current;\n    if (audioElement) {\n      audioElement.onended = playNextTrack;\n    }\n    return () => {\n      if (audioElement) {\n        audioElement.onended = null;\n      }\n    };\n  }, [currentTrack, audioFiles, currentTrackIndex, playNextTrack]);\n\n  // Update the volume of the audio element\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = volume;\n    }\n  }, [volume]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-controls\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meta-data\",\n        children: currentTrack ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"audioImage2\",\n            src: currentTrack.imageUrl,\n            alt: \"Track cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: currentTrack.trackName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"author\",\n              children: currentTrack.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"audioImage2\",\n            src: \"\",\n            alt: \"No track cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Track Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"author\",\n              children: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        id: \"customAudioPlayer\",\n        ref: audioRef,\n        src: currentTrack ? currentTrack.audioUrl : \"\",\n        controls: true,\n        autoPlay: isPlaying,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioControls, \"lV7Eeliei1ifc5XIExbxrbeH/vk=\", false, function () {\n  return [useAudioContext];\n});\n_c = AudioControls;\nexport default AudioControls;\nvar _c;\n$RefreshReg$(_c, \"AudioControls\");","map":{"version":3,"names":["React","useEffect","useRef","useAudioContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioControls","_s","currentTrack","isPlaying","volume","audioRef","setIsPlaying","setVolume","audioFiles","currentTrackIndex","setCurrentTrackIndex","setCurrentTrack","playNextTrack","length","nextIndex","nextTrack","id","audioUrl","trackName","title","author","imageUrl","audioElement","current","onended","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","controls","autoPlay","type","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/audioControls/AudioControls.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useAudioContext } from \"../AudioContext\";\r\nimport \"./AudioControls.css\";\r\n\r\nconst AudioControls = () => {\r\n  const {\r\n    currentTrack,\r\n    isPlaying,\r\n    volume,\r\n    audioRef,\r\n    setIsPlaying,\r\n    setVolume,\r\n    audioFiles,\r\n    currentTrackIndex,\r\n    setCurrentTrackIndex,\r\n    setCurrentTrack,\r\n  } = useAudioContext();\r\n\r\n  // Function to play the next track\r\n  const playNextTrack = () => {\r\n    if (audioFiles.length > 0) {\r\n      let nextIndex = (currentTrackIndex + 1) % audioFiles.length;\r\n      setCurrentTrackIndex(nextIndex);\r\n      const nextTrack = audioFiles[nextIndex];\r\n      setCurrentTrack({\r\n        id: nextTrack.id,\r\n        audioUrl: nextTrack.audioUrl,\r\n        trackName: nextTrack.title,\r\n        author: nextTrack.author,\r\n        imageUrl: nextTrack.imageUrl,\r\n      });\r\n      setIsPlaying(true);\r\n    }\r\n  };\r\n\r\n  // Set up the onEnded event listener for the audio element\r\n  useEffect(() => {\r\n    const audioElement = audioRef.current;\r\n    if (audioElement) {\r\n      audioElement.onended = playNextTrack;\r\n    }\r\n    return () => {\r\n      if (audioElement) {\r\n        audioElement.onended = null;\r\n      }\r\n    };\r\n  }, [currentTrack, audioFiles, currentTrackIndex, playNextTrack]);\r\n\r\n  // Update the volume of the audio element\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.volume = volume;\r\n    }\r\n  }, [volume]);\r\n\r\n  return (\r\n    <div className=\"audio-controls\">\r\n      <div className=\"custom-controls\">\r\n        <div className=\"meta-data\">\r\n          {currentTrack ? (\r\n            <>\r\n              <img id=\"audioImage2\" src={currentTrack.imageUrl} alt=\"Track cover\" />\r\n              <div className=\"title-author\">\r\n                <span className=\"title\">{currentTrack.trackName}</span>\r\n                <span className=\"author\">{currentTrack.author}</span>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img id=\"audioImage2\" src=\"\" alt=\"No track cover\" />\r\n              <div className=\"title-author\">\r\n                <span className=\"title\">Track Name</span>\r\n                <span className=\"author\">Author</span>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <audio\r\n          id=\"customAudioPlayer\"\r\n          ref={audioRef}\r\n          src={currentTrack ? currentTrack.audioUrl : \"\"}\r\n          controls\r\n          autoPlay={isPlaying}\r\n          type=\"audio/mpeg\"\r\n        />\r\n        {/* Rest of your controls */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioControls;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}