{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\audioList\\\\AudioList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { AudioContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioList = () => {\n  _s();\n  const {\n    setCurrentTrack,\n    setIsPlaying,\n    setVolume\n  } = useContext(AudioContext);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/audio\", {\n      method: \"GET\"\n    }).then(response => response.json()).then(data => setAudioFiles(data)).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  // {\n  //   /* Кривое кэширование */\n  // }\n  // // useEffect(() => {\n  // //   const cachedAudioFiles = localStorage.getItem(\"cachedAudioFiles\");\n\n  // //   if (cachedAudioFiles) {\n  // //     setAudioFiles(JSON.parse(cachedAudioFiles));\n  // //   } else {\n  // //     fetch(\"http://localhost:8080/audio\", { method: \"GET\" })\n  // //       .then((response) => response.json())\n  // //       .then((data) => {\n  // //         setAudioFiles(data);\n  // //         localStorage.setItem(\"cachedAudioFiles\", JSON.stringify(data));\n  // //       })\n  // //       .catch((error) => console.error(\"Error fetching data:\", error));\n  // //   }\n  // // }, []);\n\n  const handlePlayAudio = async (audioId, trackName, author, imageUrl) => {\n    if (currentTrack && currentTrack.id === audioId) {\n      setIsPlaying(!isPlaying);\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play();\n      }\n    } else {\n      try {\n        const response = await fetch(`http://localhost:8080/audio/${audioId}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const blob = await response.blob();\n        const audioData = URL.createObjectURL(new Blob([blob]));\n\n        // if (!hideAudioControls) {\n        //   handleHideAudioControls();\n        //   setHideAudioControls(true);\n        // }\n\n        // Пробуем предварительно загрузить следующий трек\n        const nextIndex = audioFiles.findIndex(file => file.id === audioId) + 1;\n        if (nextIndex < audioFiles.length) {\n          const nextResponse = await fetch(`http://localhost:8080/audio/${audioFiles[nextIndex].id}`);\n          if (!nextResponse.ok) {\n            throw new Error(`HTTP error! status: ${nextResponse.status}`);\n          }\n          const nextBlob = await nextResponse.blob();\n          const nextAudioData = URL.createObjectURL(new Blob([nextBlob]));\n\n          // Предварительно сохраняем следующий трек для использования при окончании текущего\n          setNextTrack({\n            id: audioFiles[nextIndex].id,\n            audioUrl: nextAudioData,\n            trackName: audioFiles[nextIndex].title,\n            author: audioFiles[nextIndex].author,\n            imageUrl: `data:image/jpeg;base64,${audioFiles[nextIndex].image.data}`\n          });\n        }\n        setCurrentTrack({\n          id: audioId,\n          audioUrl: audioData,\n          trackName,\n          author,\n          imageUrl\n        });\n        setIsPlaying(true);\n        setVolume(1);\n      } catch (error) {\n        console.error(\"Error fetching audio:\", error);\n      }\n    }\n  };\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = volume;\n      audioRef.current.addEventListener(\"ended\", () => {\n        if (nextTrack) {\n          setCurrentTrack(nextTrack);\n          setNextTrack(null); // Сбрасываем следующий трек после использования\n        }\n      });\n    }\n  }, [audioFiles, currentTrack, handlePlayAudio, volume, nextTrack]);\n  const handleHideAudioControls = () => {\n    toggleAudioControls();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: audioFiles.map(audioFile => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-metadata-container\",\n          children: [audioFile.image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/jpeg;base64,${audioFile.image.data}`,\n            alt: audioFile.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"play_pause\",\n              onClick: () => handlePlayAudio(audioFile.id, audioFile.title, audioFile.author, `data:image/jpeg;base64,${audioFile.image.data}`),\n              children: currentTrack && currentTrack.id === audioFile.id && isPlaying ? \"||\" : \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: audioFile.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: audioFile.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"duration-conteiner\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"duration\",\n              children: audioFile.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AudioControls, {\n      currentTrack: currentTrack,\n      isPlaying: isPlaying,\n      volume: volume,\n      audioRef: audioRef,\n      setVolume: setVolume\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioList, \"PmGSqF+EbUeLUb4qyeqTUJIttr0=\");\n_c = AudioList;\nexport default AudioList;\nvar _c;\n$RefreshReg$(_c, \"AudioList\");","map":{"version":3,"names":["React","useContext","AudioContext","jsxDEV","_jsxDEV","AudioList","_s","setCurrentTrack","setIsPlaying","setVolume","useEffect","fetch","method","then","response","json","data","setAudioFiles","catch","error","console","handlePlayAudio","audioId","trackName","author","imageUrl","currentTrack","id","isPlaying","audioRef","current","pause","play","ok","Error","status","blob","audioData","URL","createObjectURL","Blob","nextIndex","audioFiles","findIndex","file","length","nextResponse","nextBlob","nextAudioData","setNextTrack","audioUrl","title","image","volume","addEventListener","nextTrack","handleHideAudioControls","toggleAudioControls","className","children","map","audioFile","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","duration","AudioControls","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/audioList/AudioList.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { AudioContext } from '../../App';\r\n\r\nconst AudioList = () => {\r\n  const { setCurrentTrack, setIsPlaying, setVolume } = useContext(AudioContext);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/audio\", { method: \"GET\" })\r\n      .then((response) => response.json())\r\n      .then((data) => setAudioFiles(data))\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n  }, []);\r\n\r\n  // {\r\n  //   /* Кривое кэширование */\r\n  // }\r\n  // // useEffect(() => {\r\n  // //   const cachedAudioFiles = localStorage.getItem(\"cachedAudioFiles\");\r\n\r\n  // //   if (cachedAudioFiles) {\r\n  // //     setAudioFiles(JSON.parse(cachedAudioFiles));\r\n  // //   } else {\r\n  // //     fetch(\"http://localhost:8080/audio\", { method: \"GET\" })\r\n  // //       .then((response) => response.json())\r\n  // //       .then((data) => {\r\n  // //         setAudioFiles(data);\r\n  // //         localStorage.setItem(\"cachedAudioFiles\", JSON.stringify(data));\r\n  // //       })\r\n  // //       .catch((error) => console.error(\"Error fetching data:\", error));\r\n  // //   }\r\n  // // }, []);\r\n\r\n  const handlePlayAudio = async (audioId, trackName, author, imageUrl) => {\r\n    if (currentTrack && currentTrack.id === audioId) {\r\n      setIsPlaying(!isPlaying);\r\n      if (isPlaying) {\r\n        audioRef.current.pause();\r\n      } else {\r\n        audioRef.current.play();\r\n      }\r\n    } else {\r\n      try {\r\n        const response = await fetch(`http://localhost:8080/audio/${audioId}`);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const blob = await response.blob();\r\n        const audioData = URL.createObjectURL(new Blob([blob]));\r\n\r\n        // if (!hideAudioControls) {\r\n        //   handleHideAudioControls();\r\n        //   setHideAudioControls(true);\r\n        // }\r\n\r\n        // Пробуем предварительно загрузить следующий трек\r\n        const nextIndex =\r\n          audioFiles.findIndex((file) => file.id === audioId) + 1;\r\n        if (nextIndex < audioFiles.length) {\r\n          const nextResponse = await fetch(\r\n            `http://localhost:8080/audio/${audioFiles[nextIndex].id}`\r\n          );\r\n          if (!nextResponse.ok) {\r\n            throw new Error(`HTTP error! status: ${nextResponse.status}`);\r\n          }\r\n          const nextBlob = await nextResponse.blob();\r\n          const nextAudioData = URL.createObjectURL(new Blob([nextBlob]));\r\n\r\n          // Предварительно сохраняем следующий трек для использования при окончании текущего\r\n          setNextTrack({\r\n            id: audioFiles[nextIndex].id,\r\n            audioUrl: nextAudioData,\r\n            trackName: audioFiles[nextIndex].title,\r\n            author: audioFiles[nextIndex].author,\r\n            imageUrl: `data:image/jpeg;base64,${audioFiles[nextIndex].image.data}`,\r\n          });\r\n        }\r\n\r\n        setCurrentTrack({\r\n          id: audioId,\r\n          audioUrl: audioData,\r\n          trackName,\r\n          author,\r\n          imageUrl,\r\n        });\r\n        setIsPlaying(true);\r\n        setVolume(1);\r\n      } catch (error) {\r\n        console.error(\"Error fetching audio:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.volume = volume;\r\n      audioRef.current.addEventListener(\"ended\", () => {\r\n        if (nextTrack) {\r\n          setCurrentTrack(nextTrack);\r\n          setNextTrack(null); // Сбрасываем следующий трек после использования\r\n        }\r\n      });\r\n    }\r\n  }, [audioFiles, currentTrack, handlePlayAudio, volume, nextTrack]);\r\n\r\n  const handleHideAudioControls = () => {\r\n    toggleAudioControls();\r\n  };\r\n\r\n  return (\r\n    <div className=\"audio-list\">\r\n      <ul>\r\n        {audioFiles.map((audioFile) => (\r\n          <li>\r\n            <div className=\"audio-metadata-container\">\r\n              {audioFile.image && (\r\n                <img\r\n                  src={`data:image/jpeg;base64,${audioFile.image.data}`}\r\n                  alt={audioFile.title}\r\n                />\r\n              )}\r\n              <div className=\"button-container\">\r\n                <button\r\n                  className=\"play_pause\"\r\n                  onClick={() =>\r\n                    handlePlayAudio(\r\n                      audioFile.id,\r\n                      audioFile.title,\r\n                      audioFile.author,\r\n                      `data:image/jpeg;base64,${audioFile.image.data}`\r\n                    )\r\n                  }\r\n                >\r\n                  {currentTrack && currentTrack.id === audioFile.id && isPlaying\r\n                    ? \"||\"\r\n                    : \">\"}\r\n                </button>\r\n              </div>\r\n              <div className=\"title-author-container\">\r\n                <span className=\"title\">{audioFile.title}</span>\r\n                <span>{audioFile.author}</span>\r\n              </div>\r\n              <div className=\"duration-conteiner\">\r\n                <span className=\"duration\">{audioFile.duration}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* Кастомный Controls */}\r\n      <AudioControls\r\n        currentTrack={currentTrack}\r\n        isPlaying={isPlaying}\r\n        volume={volume}\r\n        audioRef={audioRef}\r\n        setVolume={setVolume}\r\n      />\r\n\r\n      {/* {currentTrack && (\r\n        <div\r\n          id=\"customControls\"\r\n          style={{\r\n            backgroundColor: \"#f0f0f0\",\r\n            padding: \"10px\",\r\n            borderRadius: \"4px\",\r\n            position: \"fixed\",\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            boxSizing: \"border-box\",\r\n            width: \"100%\",\r\n            margin: \"0 auto\",\r\n          }}\r\n        >\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <img\r\n              id=\"audioImage2\"\r\n              src={currentTrack.imageUrl}\r\n              style={{\r\n                width: \"70px\",\r\n                height: \"70px\",\r\n                marginRight: \"10px\",\r\n              }}\r\n            />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                marginLeft: \"10px\",\r\n                width: \"200px\",\r\n              }}\r\n            >\r\n              <span\r\n                id=\"customTrackName\"\r\n                style={{\r\n                  fontSize: \"20px\",\r\n                  fontWeight: \"bold\",\r\n                  marginBottom: \"5px\",\r\n                }}\r\n              >\r\n                {currentTrack.trackName}\r\n              </span>\r\n              <span\r\n                id=\"customAuthor\"\r\n                style={{ fontSize: \"18px\", color: \"#6c757d\" }}\r\n              >\r\n                {currentTrack.author}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <audio\r\n            id=\"customAudioPlayer\"\r\n            ref={audioRef}\r\n            src={currentTrack.audioUrl}\r\n            controls\r\n            autoPlay={isPlaying}\r\n            style={{ width: \"1200px\", marginRight: \"130px\" }}\r\n            type=\"audio/mpeg\"\r\n          >\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"1\"\r\n              step=\"0.01\"\r\n              value={volume}\r\n              onChange={(e) => setVolume(e.target.value)}\r\n              style={{\r\n                width: \"100px\",\r\n                marginRight: \"100px\",\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}