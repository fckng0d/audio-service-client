{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\uploadAudio\\\\UploadAudio.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadAudio = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [audioFile, setAudioFile] = useState(null);\n  const [imageFile, setImageFile] = useState(null);\n  const [duration, setDuration] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('author', author);\n    formData.append('genres', JSON.stringify(genres));\n    formData.append('audioFile', audioFile);\n    formData.append('imageFile', imageFile);\n    formData.append('duration', duration);\n    try {\n      const response = await fetch('/', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        console.log('Audio file uploaded successfully');\n      } else {\n        console.error('Error uploading audio file');\n      }\n    } catch (error) {\n      console.error('Error uploading audio file:', error);\n    }\n  };\n  const addGenreInput = () => {\n    setGenres([...genres, '']);\n  };\n  const handleChangeGenre = (index, value) => {\n    const updatedGenres = [...genres];\n    updatedGenres[index] = value;\n    setGenres(updatedGenres);\n  };\n\n  // другие обработчики событий и функции\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    encType: \"multipart/form-data\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Enter title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 112\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: author,\n      onChange: e => setAuthor(e.target.value),\n      placeholder: \"Enter author\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 115\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 122\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadAudio, \"NrX4KyjMbS6qjSabMXRCvZtnMlU=\");\n_c = UploadAudio;\nexport default UploadAudio;\nvar _c;\n$RefreshReg$(_c, \"UploadAudio\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadAudio","_s","title","setTitle","author","setAuthor","genres","setGenres","audioFile","setAudioFile","imageFile","setImageFile","duration","setDuration","handleSubmit","e","preventDefault","formData","FormData","append","JSON","stringify","response","fetch","method","body","ok","console","log","error","addGenreInput","handleChangeGenre","index","value","updatedGenres","onSubmit","encType","children","type","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/uploadAudio/UploadAudio.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst UploadAudio = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  const [genres, setGenres] = useState([]);\r\n  const [audioFile, setAudioFile] = useState(null);\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [duration, setDuration] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('author', author);\r\n    formData.append('genres', JSON.stringify(genres));\r\n    formData.append('audioFile', audioFile);\r\n    formData.append('imageFile', imageFile);\r\n    formData.append('duration', duration);\r\n\r\n    try {\r\n      const response = await fetch('/', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log('Audio file uploaded successfully');\r\n      } else {\r\n        console.error('Error uploading audio file');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading audio file:', error);\r\n    }\r\n  };\r\n\r\n  const addGenreInput = () => {\r\n    setGenres([...genres, '']);\r\n  };\r\n\r\n  const handleChangeGenre = (index, value) => {\r\n    const updatedGenres = [...genres];\r\n    updatedGenres[index] = value;\r\n    setGenres(updatedGenres);\r\n  };\r\n\r\n  // другие обработчики событий и функции\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n      <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Enter title\" /> <br />\r\n      <input type=\"text\" value={author} onChange={(e) => setAuthor(e.target.value)} placeholder=\"Enter author\" /> <br /> <br />\r\n      {/* другие инпуты и кнопки */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UploadAudio;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}