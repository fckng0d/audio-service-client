{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\AudioList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioList = () => {\n  _s();\n  const [audioFiles, setAudioFiles] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/audio\", {\n      method: \"GET\"\n    }).then(response => response.json()).then(data => setAudioFiles(data)).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  handleAudioControls();\n  const customControlsStyle = {\n    display: \"none\",\n    position: \"fixed\",\n    bottom: 0,\n    left: 0,\n    width: \"100%\",\n    background: \"#333\",\n    color: \"#fff\",\n    padding: \"10px\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Play Audio Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: audioFiles.map(audioFile => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/jpeg;base64,${audioFile.image.data}`,\n              alt: audioFile.title,\n              style: {\n                maxWidth: \"50px\",\n                maxHeight: \"50px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"control play\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Play\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [audioFile.author, \" - \", audioFile.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, audioFile.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"customControls\",\n      style: customControlsStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"customTrackName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexShrink: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"audioImage2\",\n          style: {\n            maxWidth: \"50px\",\n            maxHeight: \"50px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        id: \"customAudioPlayer\",\n        controls: true,\n        style: {\n          width: \"100%\"\n        },\n        type: \"audio/mpeg\",\n        children: \"Your browser does not support the audio element.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioList, \"3g/no86fpXfgub4JPNiIy/EUcGk=\");\n_c = AudioList;\nconst handleAudioControls = () => {\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    let currentAudioFileId = null;\n    let currentAudioPlayer = null;\n\n    // Get all elements with the class .control\n    const controlElements = document.querySelectorAll(\".control\");\n    const customAudioPlayer = document.getElementById(\"customAudioPlayer\");\n    const audioImage = document.getElementById(\"audioImage2\");\n    const customTrackName = document.getElementById(\"customTrackName\");\n    const customControls = document.getElementById(\"customControls\");\n\n    // Add a click event handler to each .control element\n    controlElements.forEach(element => {\n      element.addEventListener(\"click\", function () {\n        const clickedAudioFileId = this.getAttribute(\"data-audio-id\");\n\n        // If a different audio file is clicked, pause the current one\n        if (clickedAudioFileId !== currentAudioFileId) {\n          pauseAllAudios();\n          playAudio(this);\n        } else {\n          // Toggle play/pause for the clicked audio file\n          if (customAudioPlayer.paused) {\n            customAudioPlayer.play();\n          } else {\n            customAudioPlayer.pause();\n          }\n        }\n      });\n    });\n    function playAudio(buttonElement) {\n      const audioFileId = buttonElement.getAttribute(\"data-audio-id\");\n      const audioAuthor = buttonElement.getAttribute(\"data-audio-author\");\n      const audioTitle = buttonElement.getAttribute(\"data-audio-title\");\n      const src = \"/audio/\" + audioFileId;\n      customAudioPlayer.src = src;\n      audioImage.src = src + \"/image\";\n      customTrackName.textContent = audioAuthor + \" - \" + audioTitle;\n      customAudioPlayer.play();\n      customControls.style.display = \"block\";\n\n      // Update the current audio file ID and player reference\n      currentAudioFileId = audioFileId;\n      currentAudioPlayer = customAudioPlayer;\n    }\n    function pauseAllAudios() {\n      // Pause all audio players\n      controlElements.forEach(element => {\n        const audioPlayerId = element.getAttribute(\"data-audio-id\");\n        const audioPlayer = document.getElementById(\"audioPlayer_\" + audioPlayerId);\n        if (audioPlayer && !audioPlayer.paused) {\n          audioPlayer.pause();\n        }\n      });\n    }\n  });\n  document.querySelectorAll(\".control\").forEach(element => {\n    element.addEventListener(\"click\", function () {\n      this.classList.toggle(\"pause\");\n      this.classList.toggle(\"play\");\n    });\n  });\n};\nexport default AudioList;\nvar _c;\n$RefreshReg$(_c, \"AudioList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AudioList","_s","audioFiles","setAudioFiles","fetch","method","then","response","json","data","catch","error","console","handleAudioControls","customControlsStyle","display","position","bottom","left","width","background","color","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","map","audioFile","src","image","alt","title","style","maxWidth","maxHeight","className","author","id","flexShrink","controls","type","_c","document","addEventListener","currentAudioFileId","currentAudioPlayer","controlElements","querySelectorAll","customAudioPlayer","getElementById","audioImage","customTrackName","customControls","forEach","element","clickedAudioFileId","getAttribute","pauseAllAudios","playAudio","paused","play","pause","buttonElement","audioFileId","audioAuthor","audioTitle","textContent","audioPlayerId","audioPlayer","classList","toggle","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/AudioList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst AudioList = () => {\r\n  const [audioFiles, setAudioFiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/audio\", { method: \"GET\" })\r\n      .then((response) => response.json())\r\n      .then((data) => setAudioFiles(data))\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n  }, []);\r\n\r\n  handleAudioControls();\r\n\r\n  const customControlsStyle = {\r\n    display: \"none\",\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    background: \"#333\",\r\n    color: \"#fff\",\r\n    padding: \"10px\"\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Play Audio Files</h1>\r\n      <ul>\r\n        {audioFiles.map((audioFile) => (\r\n          <li key={audioFile.id}>\r\n            <div>\r\n              <div>\r\n                <img\r\n                  src={`data:image/jpeg;base64,${audioFile.image.data}`}\r\n                  alt={audioFile.title}\r\n                  style={{ maxWidth: \"50px\", maxHeight: \"50px\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <div className=\"control play\">\r\n                  <button>Play</button>\r\n                  <span>\r\n                    {audioFile.author} - {audioFile.title}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div id=\"customControls\" style={customControlsStyle}>\r\n        <span id=\"customTrackName\"></span>\r\n        <div style={{ flexShrink: 0 }}>\r\n          <img\r\n            id=\"audioImage2\"\r\n            style={{ maxWidth: \"50px\", maxHeight: \"50px\" }}\r\n          />\r\n        </div>\r\n        <audio\r\n          id=\"customAudioPlayer\"\r\n          controls\r\n          style={{ width: \"100%\" }}\r\n          type=\"audio/mpeg\"\r\n        >\r\n          Your browser does not support the audio element.\r\n        </audio>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst handleAudioControls = () => {\r\n  document.addEventListener(\"DOMContentLoaded\", function () {\r\n    let currentAudioFileId = null;\r\n    let currentAudioPlayer = null;\r\n\r\n    // Get all elements with the class .control\r\n    const controlElements = document.querySelectorAll(\".control\");\r\n    const customAudioPlayer = document.getElementById(\"customAudioPlayer\");\r\n    const audioImage = document.getElementById(\"audioImage2\");\r\n    const customTrackName = document.getElementById(\"customTrackName\");\r\n    const customControls = document.getElementById(\"customControls\");\r\n\r\n    // Add a click event handler to each .control element\r\n    controlElements.forEach((element) => {\r\n      element.addEventListener(\"click\", function () {\r\n        const clickedAudioFileId = this.getAttribute(\"data-audio-id\");\r\n\r\n        // If a different audio file is clicked, pause the current one\r\n        if (clickedAudioFileId !== currentAudioFileId) {\r\n          pauseAllAudios();\r\n          playAudio(this);\r\n        } else {\r\n          // Toggle play/pause for the clicked audio file\r\n          if (customAudioPlayer.paused) {\r\n            customAudioPlayer.play();\r\n          } else {\r\n            customAudioPlayer.pause();\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    function playAudio(buttonElement) {\r\n      const audioFileId = buttonElement.getAttribute(\"data-audio-id\");\r\n      const audioAuthor = buttonElement.getAttribute(\"data-audio-author\");\r\n      const audioTitle = buttonElement.getAttribute(\"data-audio-title\");\r\n\r\n      const src = \"/audio/\" + audioFileId;\r\n      customAudioPlayer.src = src;\r\n      audioImage.src = src + \"/image\";\r\n\r\n      customTrackName.textContent = audioAuthor + \" - \" + audioTitle;\r\n\r\n      customAudioPlayer.play();\r\n\r\n      customControls.style.display = \"block\";\r\n\r\n      // Update the current audio file ID and player reference\r\n      currentAudioFileId = audioFileId;\r\n      currentAudioPlayer = customAudioPlayer;\r\n    }\r\n\r\n    function pauseAllAudios() {\r\n      // Pause all audio players\r\n      controlElements.forEach((element) => {\r\n        const audioPlayerId = element.getAttribute(\"data-audio-id\");\r\n        const audioPlayer = document.getElementById(\r\n          \"audioPlayer_\" + audioPlayerId\r\n        );\r\n        if (audioPlayer && !audioPlayer.paused) {\r\n          audioPlayer.pause();\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  document.querySelectorAll(\".control\").forEach((element) => {\r\n    element.addEventListener(\"click\", function () {\r\n      this.classList.toggle(\"pause\");\r\n      this.classList.toggle(\"play\");\r\n    });\r\n  });\r\n};\r\n\r\nexport default AudioList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}