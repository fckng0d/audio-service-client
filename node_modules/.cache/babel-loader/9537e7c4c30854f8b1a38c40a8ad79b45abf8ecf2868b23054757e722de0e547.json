{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\uploadAudio\\\\UploadAudio.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [duration, setDuration] = useState('');\n  const [audioFile, setAudioFile] = useState(null);\n  const [imageFile, setImageFile] = useState(null);\n  const handleGenreChange = (e, index) => {\n    const newGenres = [...genres];\n    newGenres[index] = e.target.value;\n    setGenres(newGenres);\n  };\n  const addGenreInput = () => {\n    setGenres([...genres, '']);\n  };\n  const handleFileChange = e => {\n    if (e.target.name === 'audioFile') {\n      setAudioFile(e.target.files[0]);\n    } else if (e.target.name === 'imageFile') {\n      setImageFile(e.target.files[0]);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('author', author);\n    formData.append('audioFile', audioFile);\n    formData.append('imageFile', imageFile);\n    formData.append('genres', JSON.stringify(genres));\n    formData.append('duration', duration);\n    fetch('/', {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      if (response.ok) {\n        console.log('Audio file uploaded successfully');\n      }\n    }).catch(error => {\n      console.error('Error uploading audio file');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    encType: \"multipart/form-data\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Enter title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 130\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"author\",\n      placeholder: \"Enter author\",\n      value: author,\n      onChange: e => setAuthor(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 134\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 140\n    }, this), genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: genre,\n      onChange: e => handleGenreChange(e, index),\n      placeholder: \"Enter genre\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addGenreInput,\n      children: \"Add Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 77\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 83\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"audioFile\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 83\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"imageFile\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadForm, \"Eqv6d6zNikkpx58i8d0lJujSz3s=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadForm","_s","title","setTitle","author","setAuthor","genres","setGenres","duration","setDuration","audioFile","setAudioFile","imageFile","setImageFile","handleGenreChange","e","index","newGenres","target","value","addGenreInput","handleFileChange","name","files","handleSubmit","preventDefault","formData","FormData","append","JSON","stringify","fetch","method","body","then","response","ok","console","log","catch","error","onSubmit","encType","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","genre","onClick","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/uploadAudio/UploadAudio.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst UploadForm = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [genres, setGenres] = useState([]);\r\n    const [duration, setDuration] = useState('');\r\n    const [audioFile, setAudioFile] = useState(null);\r\n    const [imageFile, setImageFile] = useState(null);\r\n\r\n    const handleGenreChange = (e, index) => {\r\n        const newGenres = [...genres];\r\n        newGenres[index] = e.target.value;\r\n        setGenres(newGenres);\r\n    };\r\n\r\n    const addGenreInput = () => {\r\n        setGenres([...genres, '']);\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        if (e.target.name === 'audioFile') {\r\n            setAudioFile(e.target.files[0]);\r\n        } else if (e.target.name === 'imageFile') {\r\n            setImageFile(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('title', title);\r\n        formData.append('author', author);\r\n        formData.append('audioFile', audioFile);\r\n        formData.append('imageFile', imageFile);\r\n        formData.append('genres', JSON.stringify(genres));\r\n        formData.append('duration', duration);\r\n\r\n        fetch('/', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                console.log('Audio file uploaded successfully');\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error uploading audio file');\r\n        });\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n            <input type=\"text\" name=\"title\" placeholder=\"Enter title\" value={title} onChange={(e) => setTitle(e.target.value)} /><br />\r\n            <input type=\"text\" name=\"author\" placeholder=\"Enter author\" value={author} onChange={(e) => setAuthor(e.target.value)} /><br /><br />\r\n            {genres.map((genre, index) => (\r\n                <input key={index} type=\"text\" value={genre} onChange={(e) => handleGenreChange(e, index)} placeholder=\"Enter genre\" />\r\n            ))}\r\n            <button type=\"button\" onClick={addGenreInput}>Add Genre</button><br /><br />\r\n            <div>\r\n                <input type=\"file\" name=\"audioFile\" onChange={handleFileChange} /><br />\r\n                <input type=\"file\" name=\"imageFile\" onChange={handleFileChange} />\r\n            </div>\r\n            <input type=\"submit\" value=\"Upload\" />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default UploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}