{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\audioControls\\\\AudioControls.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { useAudioContext } from \"../AudioContext\";\nimport \"./AudioControls.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioControls = () => {\n  _s();\n  const {\n    currentTrack,\n    isPlaying,\n    volume,\n    setVolume,\n    audioRef,\n    audioFiles,\n    currentTrackIndex,\n    setCurrentTrackIndex,\n    setCurrentTrack,\n    setAudioFiles\n  } = useAudioContext();\n  useEffect(() => {\n    const audioElement = audioRef.current;\n    const handleEnded = () => {\n      // Проверяем, есть ли следующий трек в списке\n      if (currentTrackIndex < audioFiles.length - 1) {\n        const nextTrackIndex = currentTrackIndex + 1;\n        const nextTrack = audioFiles[nextTrackIndex];\n        const nextAudioData = `data:image/jpeg;base64,${nextTrack.image.data}`;\n        setCurrentTrackIndex(nextTrackIndex);\n        setCurrentTrack({\n          id: nextTrack.id,\n          audioUrl: nextTrack.audioUrl,\n          trackName: nextTrack.title,\n          author: nextTrack.author,\n          imageUrl: nextAudioData\n        });\n        // Воспроизводим следующий трек\n        audioElement.play();\n      } else {\n        // Если достигнут конец списка, останавливаем воспроизведение\n        setCurrentTrack(null);\n        setCurrentTrackIndex(-1);\n        audioElement.pause();\n        // Обновляем audioFiles\n        setAudioFiles([]);\n      }\n    };\n    audioElement.addEventListener(\"ended\", handleEnded);\n    return () => {\n      audioElement.removeEventListener(\"ended\", handleEnded);\n    };\n  }, [currentTrackIndex, audioFiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-controls\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meta-data\",\n        children: currentTrack ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"audioImage2\",\n            src: currentTrack.imageUrl,\n            alt: \"track cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: currentTrack.trackName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"author\",\n              children: currentTrack.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"audioImage2\",\n            src: \"\",\n            alt: \"track cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Track Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"author\",\n              children: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        id: \"customAudioPlayer\",\n        ref: audioRef,\n        src: currentTrack ? currentTrack.audioUrl : \"\",\n        controls: true,\n        autoPlay: isPlaying,\n        type: \"audio/mpeg\",\n        children: \"Your browser does not support the audio element.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"volume\",\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: volume,\n          onChange: e => setVolume(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioControls, \"LLSCvdbTL8tR1SsFCncA35msha4=\", false, function () {\n  return [useAudioContext];\n});\n_c = AudioControls;\nexport default AudioControls;\nvar _c;\n$RefreshReg$(_c, \"AudioControls\");","map":{"version":3,"names":["React","useEffect","useRef","useAudioContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioControls","_s","currentTrack","isPlaying","volume","setVolume","audioRef","audioFiles","currentTrackIndex","setCurrentTrackIndex","setCurrentTrack","setAudioFiles","audioElement","current","handleEnded","length","nextTrackIndex","nextTrack","nextAudioData","image","data","id","audioUrl","trackName","title","author","imageUrl","play","pause","addEventListener","removeEventListener","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","controls","autoPlay","type","min","max","step","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/audioControls/AudioControls.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useAudioContext } from \"../AudioContext\";\r\nimport \"./AudioControls.css\";\r\n\r\nconst AudioControls = () => {\r\n  const { currentTrack, isPlaying, volume, setVolume, audioRef, audioFiles, currentTrackIndex, setCurrentTrackIndex, setCurrentTrack, setAudioFiles } = useAudioContext();\r\n\r\n  useEffect(() => {\r\n    const audioElement = audioRef.current;\r\n\r\n    const handleEnded = () => {\r\n      // Проверяем, есть ли следующий трек в списке\r\n      if (currentTrackIndex < audioFiles.length - 1) {\r\n        const nextTrackIndex = currentTrackIndex + 1;\r\n        const nextTrack = audioFiles[nextTrackIndex];\r\n        const nextAudioData = `data:image/jpeg;base64,${nextTrack.image.data}`;\r\n\r\n        setCurrentTrackIndex(nextTrackIndex);\r\n        setCurrentTrack({\r\n          id: nextTrack.id,\r\n          audioUrl: nextTrack.audioUrl,\r\n          trackName: nextTrack.title,\r\n          author: nextTrack.author,\r\n          imageUrl: nextAudioData,\r\n        });\r\n        // Воспроизводим следующий трек\r\n        audioElement.play();\r\n      } else {\r\n        // Если достигнут конец списка, останавливаем воспроизведение\r\n        setCurrentTrack(null);\r\n        setCurrentTrackIndex(-1);\r\n        audioElement.pause();\r\n        // Обновляем audioFiles\r\n        setAudioFiles([]);\r\n      }\r\n    };\r\n\r\n    audioElement.addEventListener(\"ended\", handleEnded);\r\n\r\n    return () => {\r\n      audioElement.removeEventListener(\"ended\", handleEnded);\r\n    };\r\n  }, [currentTrackIndex, audioFiles]);\r\n\r\n  return (\r\n    <div className=\"audio-controls\">\r\n      <div className=\"custom-controls\">\r\n        <div className=\"meta-data\">\r\n          {currentTrack ? (\r\n            <>\r\n              <img id=\"audioImage2\" src={currentTrack.imageUrl} alt=\"track cover\" />\r\n              <div className=\"title-author\">\r\n                <span className=\"title\">{currentTrack.trackName}</span>\r\n                <span className=\"author\">{currentTrack.author}</span>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img id=\"audioImage2\" src=\"\" alt=\"track cover\" />\r\n              <div className=\"title-author\">\r\n                <span className=\"title\">Track Name</span>\r\n                <span className=\"author\">Author</span>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <audio\r\n          id=\"customAudioPlayer\"\r\n          ref={audioRef}\r\n          src={currentTrack ? currentTrack.audioUrl : \"\"}\r\n          controls\r\n          autoPlay={isPlaying}\r\n          type=\"audio/mpeg\"\r\n        >\r\n          Your browser does not support the audio element.\r\n        </audio>\r\n        <div className=\"volume-container\">\r\n          <input\r\n            className=\"volume\"\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.01\"\r\n            value={volume}\r\n            onChange={(e) => setVolume(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioControls;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}