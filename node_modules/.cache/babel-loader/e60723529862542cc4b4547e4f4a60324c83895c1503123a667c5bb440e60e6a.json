{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\AudioContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { debounce } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioContext = /*#__PURE__*/createContext();\nexport const useAudioContext = () => {\n  _s();\n  return useContext(AudioContext);\n};\n_s(useAudioContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AudioProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentTrack, setCurrentTrack] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [audioFiles, setAudioFiles] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(-1);\n  const [currentTime, setCurrentTime] = useState(0); // Добавляем currentTime\n  const audioRef = useRef(null);\n  const [currentPlaylistId, setCurrentPlaylistId] = useState(-1);\n  const [playlistId, setPlaylistId] = useState(-1);\n  const clearAudioFiles = () => {\n    setAudioFiles([]);\n  };\n  const updateAudioFiles = data => {\n    setAudioFiles(data);\n  };\n  const togglePlay = () => {\n    setIsPlaying(!isPlaying);\n  };\n  useEffect(() => {\n    if (currentTrackIndex !== -1 && currentPlaylistId !== id) {\n      setCurrentTrack({\n        id: audioFiles[currentTrackIndex].id,\n        audioUrl: audioFiles[currentTrackIndex].audioUrl,\n        trackName: audioFiles[currentTrackIndex].title,\n        author: audioFiles[currentTrackIndex].author,\n        imageUrl: audioFiles[currentTrackIndex].image ? `data:image/jpeg;base64,${audioFiles[currentTrackIndex].image.data}` : \"\",\n        duration: audioFiles[currentTrackIndex].duration\n      });\n    }\n  }, [audioFiles, currentTrackIndex, id, currentPlaylistId]);\n  const playNextTrack = () => {\n    console.log(audioFiles.length - 1);\n    if (currentTrackIndex === audioFiles.length - 1) return;\n    const nextIndex = currentTrackIndex + 1;\n    setCurrentTrackIndex(nextIndex);\n    console.log(\"next\");\n    setCurrentTrack({\n      id: audioFiles[nextIndex].id,\n      audioUrl: audioFiles[nextIndex].audioUrl,\n      trackName: audioFiles[nextIndex].title,\n      author: audioFiles[nextIndex].author,\n      imageUrl: audioFiles[nextIndex].image ? `data:image/jpeg;base64,${audioFiles[nextIndex].image.data}` : \"\",\n      duration: audioFiles[nextIndex].duration\n    });\n  };\n  const playPreviousTrack = () => {\n    if (currentTrackIndex === 0) return;\n    const previousIndex = currentTrackIndex - 1;\n    setCurrentTrackIndex(previousIndex);\n    setCurrentTrack({\n      id: audioFiles[previousIndex].id,\n      audioUrl: audioFiles[previousIndex].audioUrl,\n      trackName: audioFiles[previousIndex].title,\n      author: audioFiles[previousIndex].author,\n      imageUrl: audioFiles[previousIndex].image ? `data:image/jpeg;base64,${audioFiles[previousIndex].image.data}` : \"\",\n      duration: audioFiles[previousIndex].duration\n    });\n  };\n\n  // Задержка перед следующим вызовом\n  const debouncedPlayNextTrack = debounce(() => {\n    if (currentTrackIndex !== -1) {\n      playNextTrack();\n    }\n  }, 500);\n  const debouncedPlayPreviousTrack = debounce(() => {\n    if (currentTrackIndex !== -1) {\n      playPreviousTrack();\n    }\n  }, 500);\n  useEffect(() => {\n    if (currentTrackIndex !== -1) {\n      const fetchAudioAndPlay = async () => {\n        try {\n          const response = await fetch(`http://localhost:8080/api/audio/${audioFiles[currentTrackIndex].id}`);\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const blob = await response.blob();\n          const audioData = URL.createObjectURL(new Blob([blob]));\n          setCurrentTrack({\n            id: audioFiles[currentTrackIndex].id,\n            audioUrl: audioData,\n            trackName: audioFiles[currentTrackIndex].title,\n            author: audioFiles[currentTrackIndex].author,\n            imageUrl: audioFiles[currentTrackIndex].image ? `data:image/jpeg;base64,${audioFiles[currentTrackIndex].image.data}` : \"\",\n            duration: audioFiles[currentTrackIndex].duration\n          });\n          setIsPlaying(true);\n        } catch (error) {\n          console.error(\"Error fetching audio:\", error);\n        }\n      };\n      fetchAudioAndPlay();\n      audioRef.current.volume = volume;\n    }\n  }, [audioFiles, currentTrackIndex]);\n  return /*#__PURE__*/_jsxDEV(AudioContext.Provider, {\n    value: {\n      currentTrack,\n      setCurrentTrack,\n      isPlaying,\n      setIsPlaying,\n      togglePlay,\n      volume,\n      setVolume,\n      audioFiles,\n      updateAudioFiles,\n      currentTrackIndex,\n      setCurrentTrackIndex,\n      audioRef,\n      debouncedPlayNextTrack,\n      debouncedPlayPreviousTrack,\n      currentTime,\n      setCurrentTime,\n      clearAudioFiles,\n      currentPlaylistId,\n      setCurrentPlaylistId,\n      playlistId,\n      setPlaylistId\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s2(AudioProvider, \"gpjGCdU4TDtGF/YxuF3lCb9pE6o=\");\n_c = AudioProvider;\nAudioProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"AudioProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useRef","PropTypes","debounce","jsxDEV","_jsxDEV","AudioContext","useAudioContext","_s","AudioProvider","children","_s2","currentTrack","setCurrentTrack","isPlaying","setIsPlaying","volume","setVolume","audioFiles","setAudioFiles","currentTrackIndex","setCurrentTrackIndex","currentTime","setCurrentTime","audioRef","currentPlaylistId","setCurrentPlaylistId","playlistId","setPlaylistId","clearAudioFiles","updateAudioFiles","data","togglePlay","id","audioUrl","trackName","title","author","imageUrl","image","duration","playNextTrack","console","log","length","nextIndex","playPreviousTrack","previousIndex","debouncedPlayNextTrack","debouncedPlayPreviousTrack","fetchAudioAndPlay","response","fetch","ok","Error","status","blob","audioData","URL","createObjectURL","Blob","error","current","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","node","isRequired","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/AudioContext.js"],"sourcesContent":["import React, {\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { debounce } from \"lodash\";\r\n\r\nconst AudioContext = createContext();\r\n\r\nexport const useAudioContext = () => useContext(AudioContext);\r\n\r\nexport const AudioProvider = ({ children }) => {\r\n  const [currentTrack, setCurrentTrack] = useState(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [volume, setVolume] = useState(1);\r\n  const [audioFiles, setAudioFiles] = useState([]);\r\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(-1);\r\n  const [currentTime, setCurrentTime] = useState(0); // Добавляем currentTime\r\n  const audioRef = useRef(null);\r\n  const [currentPlaylistId, setCurrentPlaylistId] = useState(-1);\r\n  const [playlistId, setPlaylistId] = useState(-1);\r\n\r\n  const clearAudioFiles = () => {\r\n    setAudioFiles([]);\r\n  };\r\n\r\n  const updateAudioFiles = (data) => {\r\n    setAudioFiles(data);\r\n  };\r\n\r\n  const togglePlay = () => {\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentTrackIndex !== -1 && currentPlaylistId !== id) {\r\n      setCurrentTrack({\r\n        id: audioFiles[currentTrackIndex].id,\r\n        audioUrl: audioFiles[currentTrackIndex].audioUrl,\r\n        trackName: audioFiles[currentTrackIndex].title,\r\n        author: audioFiles[currentTrackIndex].author,\r\n        imageUrl: audioFiles[currentTrackIndex].image\r\n          ? `data:image/jpeg;base64,${audioFiles[currentTrackIndex].image.data}`\r\n          : \"\",\r\n        duration: audioFiles[currentTrackIndex].duration,\r\n      });\r\n    }\r\n  }, [audioFiles, currentTrackIndex, id, currentPlaylistId]);\r\n\r\n  const playNextTrack = () => {\r\n    console.log(audioFiles.length - 1);\r\n    if (currentTrackIndex === audioFiles.length - 1) return;\r\n    const nextIndex = currentTrackIndex + 1;\r\n    setCurrentTrackIndex(nextIndex);\r\n    console.log(\"next\");\r\n    setCurrentTrack({\r\n      id: audioFiles[nextIndex].id,\r\n      audioUrl: audioFiles[nextIndex].audioUrl,\r\n      trackName: audioFiles[nextIndex].title,\r\n      author: audioFiles[nextIndex].author,\r\n      imageUrl: audioFiles[nextIndex].image\r\n        ? `data:image/jpeg;base64,${audioFiles[nextIndex].image.data}`\r\n        : \"\",\r\n      duration: audioFiles[nextIndex].duration,\r\n    });\r\n  };\r\n\r\n  const playPreviousTrack = () => {\r\n    if (currentTrackIndex === 0) return;\r\n    const previousIndex = currentTrackIndex - 1;\r\n    setCurrentTrackIndex(previousIndex);\r\n    setCurrentTrack({\r\n      id: audioFiles[previousIndex].id,\r\n      audioUrl: audioFiles[previousIndex].audioUrl,\r\n      trackName: audioFiles[previousIndex].title,\r\n      author: audioFiles[previousIndex].author,\r\n      imageUrl: audioFiles[previousIndex].image\r\n        ? `data:image/jpeg;base64,${audioFiles[previousIndex].image.data}`\r\n        : \"\",\r\n      duration: audioFiles[previousIndex].duration,\r\n    });\r\n  };\r\n\r\n  // Задержка перед следующим вызовом\r\n  const debouncedPlayNextTrack = debounce(() => {\r\n    if (currentTrackIndex !== -1) {\r\n      playNextTrack();\r\n    }\r\n  }, 500);\r\n\r\n  const debouncedPlayPreviousTrack = debounce(() => {\r\n    if (currentTrackIndex !== -1) {\r\n      playPreviousTrack();\r\n    }\r\n  }, 500);\r\n\r\n  useEffect(() => {\r\n    if (currentTrackIndex !== -1) {\r\n      const fetchAudioAndPlay = async () => {\r\n        try {\r\n          const response = await fetch(\r\n            `http://localhost:8080/api/audio/${audioFiles[currentTrackIndex].id}`\r\n          );\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n          const blob = await response.blob();\r\n          const audioData = URL.createObjectURL(new Blob([blob]));\r\n\r\n          setCurrentTrack({\r\n            id: audioFiles[currentTrackIndex].id,\r\n            audioUrl: audioData,\r\n            trackName: audioFiles[currentTrackIndex].title,\r\n            author: audioFiles[currentTrackIndex].author,\r\n            imageUrl: audioFiles[currentTrackIndex].image\r\n              ? `data:image/jpeg;base64,${audioFiles[currentTrackIndex].image.data}`\r\n              : \"\",\r\n            duration: audioFiles[currentTrackIndex].duration,\r\n          });\r\n          setIsPlaying(true);\r\n        } catch (error) {\r\n          console.error(\"Error fetching audio:\", error);\r\n        }\r\n      };\r\n\r\n      fetchAudioAndPlay();\r\n      audioRef.current.volume = volume;\r\n    }\r\n  }, [audioFiles, currentTrackIndex]);\r\n\r\n  return (\r\n    <AudioContext.Provider\r\n      value={{\r\n        currentTrack,\r\n        setCurrentTrack,\r\n        isPlaying,\r\n        setIsPlaying,\r\n        togglePlay,\r\n        volume,\r\n        setVolume,\r\n        audioFiles,\r\n        updateAudioFiles,\r\n        currentTrackIndex,\r\n        setCurrentTrackIndex,\r\n        audioRef,\r\n        debouncedPlayNextTrack,\r\n        debouncedPlayPreviousTrack,\r\n        currentTime,\r\n        setCurrentTime,\r\n        clearAudioFiles,\r\n        currentPlaylistId,\r\n        setCurrentPlaylistId,\r\n        playlistId, setPlaylistId\r\n      }}\r\n    >\r\n      {children}\r\n    </AudioContext.Provider>\r\n  );\r\n};\r\n\r\nAudioProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}