{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\audioControls\\\\AudioControls.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useAudioContext } from \"../AudioContext\";\nimport \"./AudioControls.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioControls = () => {\n  _s();\n  // const { id } = useParams();\n\n  const {\n    currentTrack,\n    isPlaying,\n    togglePlay,\n    volume,\n    audioRef,\n    setVolume,\n    debouncedPlayNextTrack,\n    debouncedPlayPreviousTrack,\n    currentTrackIndex,\n    playlistData,\n    // currentPlaylistId,\n    // setCurrentPlaylistId,\n    playlistId,\n    setPlaylistId\n  } = useAudioContext();\n  const [currentTime, setCurrentTime] = useState(0);\n  const [isSeeking, setIsSeeking] = useState(false);\n  const prevAudioUrl = useRef(null);\n\n  // useEffect(() => {\n  //   // Запрос и обновление данных выполняются только при начале воспроизведения аудио\n  //   if (currentTrackIndex !== -1 && playlistId !== id) {\n  //     // Если текущий плейлист изменился, но воспроизведение не начато\n  //     setPlaylistId(id); // Обновляем текущий плейлист\n  //   }\n  // }, [currentTrackIndex, playlistId, id]);\n\n  useEffect(() => {\n    const updateTime = () => {\n      setCurrentTime(audioRef.current.currentTime);\n    };\n    const interval = setInterval(updateTime, 100); // Обновляем текущее время каждые 100 миллисекунд\n\n    return () => clearInterval(interval);\n  }, [audioRef]);\n  useEffect(() => {\n    if (currentTrack) {\n      audioRef.current.src = currentTrack.audioUrl;\n    }\n  }, [currentTrack]);\n  const handleTogglePlay = () => {\n    if (currentTrackIndex !== -1) {\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play();\n      }\n      togglePlay();\n    }\n  };\n  useEffect(() => {\n    audioRef.current.volume = volume;\n  }, [volume]);\n  useEffect(() => {\n    const handleAudioEnded = () => {\n      // Проверяем, является ли текущий трек последним в списке треков\n      if (playlistData && playlistData.audioFiles && currentTrackIndex === playlistData.audioFiles.length - 1) {\n        togglePlay();\n      } else {\n        debouncedPlayNextTrack();\n        console.log(\"next\");\n      }\n    };\n    const audioElement = audioRef.current;\n    if (audioElement) {\n      audioElement.addEventListener(\"ended\", handleAudioEnded);\n      return () => {\n        audioElement.removeEventListener(\"ended\", handleAudioEnded);\n      };\n    }\n    // audioRef.current.addEventListener(\"ended\", handleAudioEnded);\n\n    // return () => {\n    //   audioRef.current.removeEventListener(\"ended\", handleAudioEnded);\n    // };\n  }, [debouncedPlayNextTrack, togglePlay, audioRef, currentTrackIndex, playlistData]);\n  function formatDuration(duration) {\n    const hours = Math.floor(duration / 3600);\n    const minutes = Math.floor(duration % 3600 / 60);\n    const seconds = Math.floor(duration % 60);\n    let formattedTime = \"\";\n    if (hours > 0) {\n      formattedTime += hours + \":\";\n    }\n    if (hours > 0 && minutes < 10) {\n      formattedTime += \"0\";\n    }\n    formattedTime += String(minutes).padStart(hours > 0 ? 2 : 1, \"0\") + \":\";\n    formattedTime += String(seconds).padStart(2, \"0\");\n    return formattedTime;\n  }\n  const handleTimeChange = e => {\n    const newTime = e.target.value * currentTrack.duration;\n    setCurrentTime(newTime);\n    audioRef.current.currentTime = newTime;\n  };\n  const handleSeekStart = () => {\n    setIsSeeking(true);\n    audioRef.current.pause(); // При начале перемотки останавливаем аудио\n  };\n  const handleSeekEnd = () => {\n    setIsSeeking(false);\n    if (isPlaying) {\n      audioRef.current.play(); // Если аудио было воспроизведено до перемотки, возобновляем воспроизведение после перемотки\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-controls\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meta-data\",\n        children: currentTrack ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"audioImage2\",\n            src: currentTrack.imageUrl,\n            alt: currentTrack.trackName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: currentTrack.trackName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"author\",\n              children: currentTrack.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"audioImage2\",\n            src: \"note.png\",\n            alt: \"Track\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Track Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"author\",\n              children: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"previous\",\n          onClick: debouncedPlayPreviousTrack,\n          disabled: currentTrackIndex === 0,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-backward\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play-pause\",\n          onClick: handleTogglePlay,\n          children: currentTrackIndex !== -1 && isPlaying ? \"||\" : \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next\",\n          onClick: debouncedPlayNextTrack,\n          disabled: currentTrackIndex === -1,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-forward\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-time\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: currentTrack ? formatDuration(currentTime) : \"0:00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          id: \"customAudioPlayer\"\n          // controls\n          ,\n          ref: audioRef,\n          autoPlay: isPlaying,\n          type: \"audio/mpeg\",\n          children: \"Your browser does not support the audio element.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), currentTrack ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-timeline\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-timeline\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.001\",\n            value: currentTrack ? currentTime / currentTrack.duration : 0,\n            onChange: handleTimeChange,\n            onMouseDown: handleSeekStart,\n            onMouseUp: handleSeekEnd\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-timeline\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-timeline\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: currentTrack ? currentTime / currentTrack.duration : 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"duration\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: currentTrack ? formatDuration(currentTrack.duration) : \"0:00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"volume\",\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: volume,\n          onChange: e => setVolume(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioControls, \"kmftceX1ZpLl8+9GWp4p7GGrsgU=\", false, function () {\n  return [useAudioContext];\n});\n_c = AudioControls;\nexport default AudioControls;\nvar _c;\n$RefreshReg$(_c, \"AudioControls\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","useAudioContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioControls","_s","currentTrack","isPlaying","togglePlay","volume","audioRef","setVolume","debouncedPlayNextTrack","debouncedPlayPreviousTrack","currentTrackIndex","playlistData","playlistId","setPlaylistId","currentTime","setCurrentTime","isSeeking","setIsSeeking","prevAudioUrl","updateTime","current","interval","setInterval","clearInterval","src","audioUrl","handleTogglePlay","pause","play","handleAudioEnded","audioFiles","length","console","log","audioElement","addEventListener","removeEventListener","formatDuration","duration","hours","Math","floor","minutes","seconds","formattedTime","String","padStart","handleTimeChange","e","newTime","target","value","handleSeekStart","handleSeekEnd","className","children","id","imageUrl","alt","trackName","fileName","_jsxFileName","lineNumber","columnNumber","author","onClick","disabled","ref","autoPlay","type","min","max","step","onChange","onMouseDown","onMouseUp","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/audioControls/AudioControls.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAudioContext } from \"../AudioContext\";\r\nimport \"./AudioControls.css\";\r\n\r\nconst AudioControls = () => {\r\n  // const { id } = useParams();\r\n\r\n  const {\r\n    currentTrack,\r\n    isPlaying,\r\n    togglePlay,\r\n    volume,\r\n    audioRef,\r\n    setVolume,\r\n    debouncedPlayNextTrack,\r\n    debouncedPlayPreviousTrack,\r\n    currentTrackIndex,\r\n    playlistData,\r\n    // currentPlaylistId,\r\n    // setCurrentPlaylistId,\r\n    playlistId,\r\n    setPlaylistId,\r\n  } = useAudioContext();\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [isSeeking, setIsSeeking] = useState(false);\r\n\r\n  const prevAudioUrl = useRef(null);\r\n\r\n  // useEffect(() => {\r\n  //   // Запрос и обновление данных выполняются только при начале воспроизведения аудио\r\n  //   if (currentTrackIndex !== -1 && playlistId !== id) {\r\n  //     // Если текущий плейлист изменился, но воспроизведение не начато\r\n  //     setPlaylistId(id); // Обновляем текущий плейлист\r\n  //   }\r\n  // }, [currentTrackIndex, playlistId, id]);\r\n\r\n  useEffect(() => {\r\n    const updateTime = () => {\r\n      setCurrentTime(audioRef.current.currentTime);\r\n    };\r\n\r\n    const interval = setInterval(updateTime, 100); // Обновляем текущее время каждые 100 миллисекунд\r\n\r\n    return () => clearInterval(interval);\r\n  }, [audioRef]);\r\n\r\n  useEffect(() => {\r\n    if (currentTrack) {\r\n      audioRef.current.src = currentTrack.audioUrl;\r\n    }\r\n  }, [currentTrack]);\r\n\r\n  const handleTogglePlay = () => {\r\n    if (currentTrackIndex !== -1) {\r\n      if (isPlaying) {\r\n        audioRef.current.pause(); \r\n      } else {\r\n        audioRef.current.play(); \r\n      }\r\n      togglePlay();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    audioRef.current.volume = volume;\r\n  }, [volume]);\r\n\r\n  useEffect(() => {\r\n    const handleAudioEnded = () => {\r\n      // Проверяем, является ли текущий трек последним в списке треков\r\n      if (\r\n        playlistData &&\r\n        playlistData.audioFiles &&\r\n        currentTrackIndex === playlistData.audioFiles.length - 1\r\n      ) {\r\n        togglePlay();\r\n      } else {\r\n        debouncedPlayNextTrack();\r\n        console.log(\"next\");\r\n      }\r\n    };\r\n\r\n    const audioElement = audioRef.current;\r\n    if (audioElement) {\r\n      audioElement.addEventListener(\"ended\", handleAudioEnded);\r\n\r\n      return () => {\r\n        audioElement.removeEventListener(\"ended\", handleAudioEnded);\r\n      };\r\n    }\r\n    // audioRef.current.addEventListener(\"ended\", handleAudioEnded);\r\n\r\n    // return () => {\r\n    //   audioRef.current.removeEventListener(\"ended\", handleAudioEnded);\r\n    // };\r\n  }, [\r\n    debouncedPlayNextTrack,\r\n    togglePlay,\r\n    audioRef,\r\n    currentTrackIndex,\r\n    playlistData,\r\n  ]);\r\n\r\n  function formatDuration(duration) {\r\n    const hours = Math.floor(duration / 3600);\r\n    const minutes = Math.floor((duration % 3600) / 60);\r\n    const seconds = Math.floor(duration % 60);\r\n\r\n    let formattedTime = \"\";\r\n    if (hours > 0) {\r\n      formattedTime += hours + \":\";\r\n    }\r\n    if (hours > 0 && minutes < 10) {\r\n      formattedTime += \"0\";\r\n    }\r\n    formattedTime += String(minutes).padStart(hours > 0 ? 2 : 1, \"0\") + \":\";\r\n    formattedTime += String(seconds).padStart(2, \"0\");\r\n\r\n    return formattedTime;\r\n  }\r\n\r\n  const handleTimeChange = (e) => {\r\n    const newTime = e.target.value * currentTrack.duration;\r\n    setCurrentTime(newTime);\r\n    audioRef.current.currentTime = newTime;\r\n  };\r\n\r\n  const handleSeekStart = () => {\r\n    setIsSeeking(true);\r\n    audioRef.current.pause(); // При начале перемотки останавливаем аудио\r\n  };\r\n\r\n  const handleSeekEnd = () => {\r\n    setIsSeeking(false);\r\n    if (isPlaying) {\r\n      audioRef.current.play(); // Если аудио было воспроизведено до перемотки, возобновляем воспроизведение после перемотки\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"audio-controls\">\r\n      <div className=\"custom-controls\">\r\n        <div className=\"meta-data\">\r\n          {currentTrack ? (\r\n            <>\r\n              <img\r\n                id=\"audioImage2\"\r\n                src={currentTrack.imageUrl}\r\n                alt={currentTrack.trackName}\r\n              />\r\n              <div className=\"title-author\">\r\n                <span className=\"title\">{currentTrack.trackName}</span>\r\n                <span className=\"author\">{currentTrack.author}</span>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img id=\"audioImage2\" src=\"note.png\" alt=\"Track\" />\r\n              <div className=\"title-author\">\r\n                <span className=\"title\">Track Name</span>\r\n                <span className=\"author\">Author</span>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"controls-container\">\r\n          <button\r\n            className=\"previous\"\r\n            onClick={debouncedPlayPreviousTrack}\r\n            disabled={currentTrackIndex === 0}\r\n          >\r\n            <i className=\"fas fa-backward\"></i>\r\n          </button>\r\n          <button className=\"play-pause\" onClick={handleTogglePlay}>\r\n            {currentTrackIndex !== -1 && isPlaying ? \"||\" : \">\"}\r\n          </button>\r\n          <button\r\n            className=\"next\"\r\n            onClick={debouncedPlayNextTrack}\r\n            disabled={currentTrackIndex === -1}\r\n          >\r\n            <i className=\"fas fa-forward\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"timeline-container\">\r\n          <div className=\"current-time\">\r\n            <span>{currentTrack ? formatDuration(currentTime) : \"0:00\"}</span>\r\n          </div>\r\n          <audio\r\n            id=\"customAudioPlayer\"\r\n            // controls\r\n            ref={audioRef}\r\n            autoPlay={isPlaying}\r\n            type=\"audio/mpeg\"\r\n          >\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n          {currentTrack ? (\r\n            <div className=\"custom-timeline\">\r\n              <input\r\n                className=\"input-timeline\"\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"1\"\r\n                step=\"0.001\"\r\n                value={currentTrack ? currentTime / currentTrack.duration : 0}\r\n                onChange={handleTimeChange}\r\n                onMouseDown={handleSeekStart}\r\n                onMouseUp={handleSeekEnd}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className=\"custom-timeline\">\r\n              <input\r\n                className=\"input-timeline\"\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"1\"\r\n                step=\"0.01\"\r\n                value={currentTrack ? currentTime / currentTrack.duration : 0}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"duration\">\r\n            <span>\r\n              {currentTrack ? formatDuration(currentTrack.duration) : \"0:00\"}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"volume-container\">\r\n          <input\r\n            className=\"volume\"\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"0.01\"\r\n            value={volume}\r\n            onChange={(e) => setVolume(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioControls;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}