{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\audioControls\\\\AudioControls.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { useAudioContext } from \"../AudioContext\";\nimport \"./AudioControls.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioControls = ({\n  toggleAudioControls\n}) => {\n  _s();\n  // Добавлен проп toggleAudioControls\n  const {\n    currentTrack,\n    isPlaying,\n    volume,\n    setCurrentTrack,\n    setVolume\n  } = useAudioContext();\n  const audioRef = useRef(null);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = volume;\n      audioRef.current.addEventListener(\"ended\", () => {\n        setCurrentTrack(null); // Удалили использование nextTrack\n      });\n    }\n  }, [currentTrack, volume, setCurrentTrack]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-controls\",\n    children: currentTrack && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meta-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"audioImage2\",\n          src: currentTrack.imageUrl || \"../music.jpg\",\n          alt: currentTrack.trackName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-author\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title\",\n            children: currentTrack.trackName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"author\",\n            children: currentTrack.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        id: \"customAudioPlayer\",\n        ref: audioRef,\n        src: currentTrack.audioUrl,\n        controls: true,\n        autoPlay: isPlaying,\n        type: \"audio/mpeg\",\n        children: \"Your browser does not support the audio element.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"volume\",\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: volume,\n          onChange: e => setVolume(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleAudioControls,\n        children: \"Toggle Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioControls, \"WQRAiy2PxzXZ2cWFoXP2ODefX9k=\", false, function () {\n  return [useAudioContext];\n});\n_c = AudioControls;\nexport default AudioControls;\nvar _c;\n$RefreshReg$(_c, \"AudioControls\");","map":{"version":3,"names":["React","useEffect","useRef","useAudioContext","jsxDEV","_jsxDEV","AudioControls","toggleAudioControls","_s","currentTrack","isPlaying","volume","setCurrentTrack","setVolume","audioRef","current","addEventListener","className","children","id","src","imageUrl","alt","trackName","fileName","_jsxFileName","lineNumber","columnNumber","author","ref","audioUrl","controls","autoPlay","type","min","max","step","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/audioControls/AudioControls.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useAudioContext } from \"../AudioContext\";\r\nimport \"./AudioControls.css\";\r\n\r\nconst AudioControls = ({ toggleAudioControls }) => { // Добавлен проп toggleAudioControls\r\n  const {\r\n    currentTrack,\r\n    isPlaying,\r\n    volume,\r\n    setCurrentTrack,\r\n    setVolume,\r\n  } = useAudioContext();\r\n  const audioRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.volume = volume;\r\n      audioRef.current.addEventListener(\"ended\", () => {\r\n        setCurrentTrack(null); // Удалили использование nextTrack\r\n      });\r\n    }\r\n  }, [currentTrack, volume, setCurrentTrack]);\r\n\r\n  return (\r\n    <div className=\"audio-controls\">\r\n      {currentTrack && (\r\n        <div className=\"custom-controls\">\r\n          <div className=\"meta-data\">\r\n            <img\r\n              id=\"audioImage2\"\r\n              src={currentTrack.imageUrl || \"../music.jpg\"}\r\n              alt={currentTrack.trackName}\r\n            />\r\n            <div className=\"title-author\">\r\n              <span className=\"title\">{currentTrack.trackName}</span>\r\n              <span className=\"author\">{currentTrack.author}</span>\r\n            </div>\r\n          </div>\r\n          <audio\r\n            id=\"customAudioPlayer\"\r\n            ref={audioRef}\r\n            src={currentTrack.audioUrl}\r\n            controls\r\n            autoPlay={isPlaying}\r\n            type=\"audio/mpeg\"\r\n          >\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n          <div className=\"volume-container\">\r\n            <input\r\n              className=\"volume\"\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"1\"\r\n              step=\"0.01\"\r\n              value={volume}\r\n              onChange={(e) => setVolume(e.target.value)}\r\n            />\r\n          </div>\r\n          <button onClick={toggleAudioControls}>Toggle Controls</button> {/* Добавлено */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioControls;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}