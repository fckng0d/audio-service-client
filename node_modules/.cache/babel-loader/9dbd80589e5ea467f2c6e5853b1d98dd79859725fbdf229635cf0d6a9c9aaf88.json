{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\audioList\\\\AudioList.jsx\",\n  _s = $RefreshSig$();\n// AudioList.js\nimport React, { useEffect } from \"react\";\nimport { useAudioContext } from \"../AudioContext\";\nimport \"./AudioList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioList = () => {\n  _s();\n  const {\n    setCurrentTrack,\n    setIsPlaying,\n    setCurrentTrackIndex,\n    updateAudioFiles,\n    audioFiles,\n    currentTrack,\n    isPlaying\n  } = useAudioContext();\n  useEffect(() => {\n    fetch(\"http://localhost:8080/audio\", {\n      method: \"GET\"\n    }).then(response => response.json()).then(data => updateAudioFiles(data)).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  const handlePlayAudio = async (audioFile, index) => {\n    try {\n      const response = await fetch(`http://localhost:8080/audio/${audioFile.id}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const blob = await response.blob();\n      const audioData = URL.createObjectURL(new Blob([blob]));\n      setCurrentTrackIndex(index);\n      if (currentTrack && currentTrack.id === audioFile.id && isPlaying) {\n        // Если текущий трек уже играет, оставляем воспроизведение без изменений\n        setIsPlaying(true);\n      } else {\n        setCurrentTrack({\n          id: audioFile.id,\n          audioUrl: audioData,\n          trackName: audioFile.title,\n          author: audioFile.author,\n          imageUrl: audioFile.image ? `data:image/jpeg;base64,${audioFile.image.data}` : \"\"\n        });\n        setIsPlaying(true);\n      }\n    } catch (error) {\n      console.error(\"Error fetching audio:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-list\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: audioFiles.map((audioFile, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-metadata-container\",\n          children: [audioFile.image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/jpeg;base64,${audioFile.image.data}`,\n            alt: audioFile.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"play_pause\",\n              onClick: () => handlePlayAudio(audioFile, index),\n              children: currentTrack && currentTrack.id === audioFile.id && isPlaying ? \"||\" : \"Play\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: audioFile.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: audioFile.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"duration-container\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"duration\",\n              children: audioFile.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, audioFile.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioList, \"A8XO7jAPKgm96W5ipk35wm/eydw=\", false, function () {\n  return [useAudioContext];\n});\n_c = AudioList;\nexport default AudioList;\nvar _c;\n$RefreshReg$(_c, \"AudioList\");","map":{"version":3,"names":["React","useEffect","useAudioContext","jsxDEV","_jsxDEV","AudioList","_s","setCurrentTrack","setIsPlaying","setCurrentTrackIndex","updateAudioFiles","audioFiles","currentTrack","isPlaying","fetch","method","then","response","json","data","catch","error","console","handlePlayAudio","audioFile","index","id","ok","Error","status","blob","audioData","URL","createObjectURL","Blob","audioUrl","trackName","title","author","imageUrl","image","className","children","map","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","duration","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/audioList/AudioList.jsx"],"sourcesContent":["// AudioList.js\r\nimport React, { useEffect } from \"react\";\r\nimport { useAudioContext } from \"../AudioContext\";\r\nimport \"./AudioList.css\";\r\n\r\nconst AudioList = () => {\r\n  const { setCurrentTrack, setIsPlaying, setCurrentTrackIndex, updateAudioFiles, audioFiles, currentTrack, isPlaying } = useAudioContext();\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/audio\", { method: \"GET\" })\r\n      .then((response) => response.json())\r\n      .then((data) => updateAudioFiles(data))\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n  }, []);\r\n\r\n  const handlePlayAudio = async (audioFile, index) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/audio/${audioFile.id}`);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const blob = await response.blob();\r\n      const audioData = URL.createObjectURL(new Blob([blob]));\r\n\r\n      setCurrentTrackIndex(index);\r\n\r\n      if (currentTrack && currentTrack.id === audioFile.id && isPlaying) {\r\n        // Если текущий трек уже играет, оставляем воспроизведение без изменений\r\n        setIsPlaying(true);\r\n      } else {\r\n        setCurrentTrack({\r\n          id: audioFile.id,\r\n          audioUrl: audioData,\r\n          trackName: audioFile.title,\r\n          author: audioFile.author,\r\n          imageUrl: audioFile.image ? `data:image/jpeg;base64,${audioFile.image.data}` : \"\",\r\n        });\r\n        setIsPlaying(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching audio:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"audio-list\">\r\n      <ul>\r\n        {audioFiles.map((audioFile, index) => (\r\n          <li key={audioFile.id}>\r\n            <div className=\"audio-metadata-container\">\r\n              {audioFile.image && (\r\n                <img\r\n                  src={`data:image/jpeg;base64,${audioFile.image.data}`}\r\n                  alt={audioFile.title}\r\n                />\r\n              )}\r\n              <div className=\"button-container\">\r\n                <button\r\n                  className=\"play_pause\"\r\n                  onClick={() => handlePlayAudio(audioFile, index)}\r\n                >\r\n                  {currentTrack && currentTrack.id === audioFile.id && isPlaying ? \"||\" : \"Play\"}\r\n                </button>\r\n              </div>\r\n              <div className=\"title-author-container\">\r\n                <span className=\"title\">{audioFile.title}</span>\r\n                <span>{audioFile.author}</span>\r\n              </div>\r\n              <div className=\"duration-container\">\r\n                <span className=\"duration\">{audioFile.duration}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}