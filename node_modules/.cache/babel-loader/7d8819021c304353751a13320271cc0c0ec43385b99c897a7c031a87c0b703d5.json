{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\uploadAudio\\\\UploadAudio.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [duration, setDuration] = useState('');\n  const [audioFile, setAudioFile] = useState(null);\n  const [imageFile, setImageFile] = useState(null);\n  const handleGenreChange = (e, index) => {\n    const newGenres = [...genres];\n    newGenres[index] = e.target.value;\n    setGenres(newGenres);\n  };\n  const addGenreInput = () => {\n    setGenres([...genres, '']);\n  };\n  const handleFileChange = e => {\n    if (e.target.name === 'audioFile') {\n      setAudioFile(e.target.files[0]);\n      getAudioDuration();\n    } else if (e.target.name === 'imageFile') {\n      if (e.target.files.length > 0) {\n        setImageFile(e.target.files[0]);\n      }\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('author', author);\n    formData.append('audioFile', audioFile);\n    formData.append('imageFile', imageFile);\n    formData.append('genres', JSON.stringify(genres));\n    formData.append('duration', duration);\n    fetch('http://localhost:8080/', {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      if (response.ok) {\n        console.log('Audio file uploaded successfully');\n      }\n    }).catch(error => {\n      console.error('Error uploading audio file');\n    });\n  };\n  function getAudioDuration() {\n    const audioFile = document.querySelector('input[name=\"audioFile\"]').files[0];\n    const audio = new Audio();\n    audio.src = URL.createObjectURL(audioFile);\n    audio.addEventListener('loadedmetadata', function () {\n      const duration = audio.duration;\n      // Преобразование продолжительности в формат ЧЧ:ММ:СС\n      const durationInput = document.getElementById('durationInput');\n      if (durationInput) {\n        durationInput.value = formatDuration(duration);\n      }\n      setDuration(formatDuration(duration));\n    });\n  }\n  function formatDuration(duration) {\n    const hours = Math.floor(duration / 3600);\n    const minutes = Math.floor(duration % 3600 / 60);\n    const seconds = Math.floor(duration % 60);\n    let formattedTime = '';\n    if (hours > 0) {\n      formattedTime += hours + ':';\n    }\n    if (hours > 0 && minutes < 10) {\n      formattedTime += '0';\n    }\n    formattedTime += String(minutes).padStart(hours > 0 ? 2 : 1, '0') + ':';\n    formattedTime += String(seconds).padStart(2, '0');\n    return formattedTime;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Enter title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 130\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"author\",\n        placeholder: \"Enter author\",\n        value: author,\n        onChange: e => setAuthor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 134\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 140\n      }, this), genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: genre,\n        onChange: e => handleGenreChange(e, index),\n        placeholder: \"Enter genre\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"duration\",\n        id: \"durationInput\",\n        value: duration,\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addGenreInput,\n        children: \"Add Genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 77\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 83\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"audioFile\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 83\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"imageFile\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadForm, \"Eqv6d6zNikkpx58i8d0lJujSz3s=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadForm","_s","title","setTitle","author","setAuthor","genres","setGenres","duration","setDuration","audioFile","setAudioFile","imageFile","setImageFile","handleGenreChange","e","index","newGenres","target","value","addGenreInput","handleFileChange","name","files","getAudioDuration","length","handleSubmit","preventDefault","formData","FormData","append","JSON","stringify","fetch","method","body","then","response","ok","console","log","catch","error","document","querySelector","audio","Audio","src","URL","createObjectURL","addEventListener","durationInput","getElementById","formatDuration","hours","Math","floor","minutes","seconds","formattedTime","String","padStart","children","onSubmit","encType","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","genre","id","hidden","onClick","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/uploadAudio/UploadAudio.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst UploadForm = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [genres, setGenres] = useState([]);\r\n    const [duration, setDuration] = useState('');\r\n    const [audioFile, setAudioFile] = useState(null);\r\n    const [imageFile, setImageFile] = useState(null);\r\n\r\n    const handleGenreChange = (e, index) => {\r\n        const newGenres = [...genres];\r\n        newGenres[index] = e.target.value;\r\n        setGenres(newGenres);\r\n    };\r\n\r\n    const addGenreInput = () => {\r\n        setGenres([...genres, '']);\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        if (e.target.name === 'audioFile') {\r\n            setAudioFile(e.target.files[0]);\r\n            getAudioDuration(); \r\n        } else if (e.target.name === 'imageFile') {\r\n            if (e.target.files.length > 0) {\r\n                setImageFile(e.target.files[0]);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('title', title);\r\n        formData.append('author', author);\r\n        formData.append('audioFile', audioFile);\r\n        formData.append('imageFile', imageFile);\r\n        formData.append('genres', JSON.stringify(genres));\r\n        formData.append('duration', duration);\r\n\r\n        fetch('http://localhost:8080/', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                console.log('Audio file uploaded successfully');\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error uploading audio file');\r\n        });\r\n    };\r\n\r\n    function getAudioDuration() {\r\n        const audioFile = document.querySelector('input[name=\"audioFile\"]').files[0];\r\n    \r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(audioFile);\r\n    \r\n        audio.addEventListener('loadedmetadata', function() {\r\n            const duration = audio.duration;\r\n            // Преобразование продолжительности в формат ЧЧ:ММ:СС\r\n            const durationInput = document.getElementById('durationInput');\r\n            if (durationInput) {\r\n                durationInput.value = formatDuration(duration);\r\n            }\r\n            setDuration(formatDuration(duration)); \r\n        });\r\n    }\r\n\r\n    function formatDuration(duration) {\r\n        const hours = Math.floor(duration / 3600);\r\n        const minutes = Math.floor((duration % 3600) / 60);\r\n        const seconds = Math.floor(duration % 60);\r\n\r\n        let formattedTime = '';\r\n        if (hours > 0) {\r\n            formattedTime += hours + ':';\r\n        }\r\n        if (hours > 0 && minutes < 10) {\r\n            formattedTime += '0';\r\n        }\r\n        formattedTime += String(minutes).padStart(hours > 0 ? 2 : 1, '0') + ':';\r\n        formattedTime += String(seconds).padStart(2, '0');\r\n\r\n        return formattedTime;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n            <input type=\"text\" name=\"title\" placeholder=\"Enter title\" value={title} onChange={(e) => setTitle(e.target.value)} /><br />\r\n            <input type=\"text\" name=\"author\" placeholder=\"Enter author\" value={author} onChange={(e) => setAuthor(e.target.value)} /><br /><br />\r\n            {genres.map((genre, index) => (\r\n                <input key={index} type=\"text\" value={genre} onChange={(e) => handleGenreChange(e, index)} placeholder=\"Enter genre\" />\r\n            ))}\r\n            <input type=\"text\" name=\"duration\" id=\"durationInput\" value={duration} hidden></input>\r\n            <button type=\"button\" onClick={addGenreInput}>Add Genre</button><br /><br />\r\n            <div>\r\n                <input type=\"file\" name=\"audioFile\" onChange={handleFileChange} /><br />\r\n                <input type=\"file\" name=\"imageFile\" onChange={handleFileChange} />\r\n            </div>\r\n            <input type=\"submit\" value=\"Upload\" />\r\n        </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}