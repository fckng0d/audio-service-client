{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\audioControls\\\\AudioControls.jsx\",\n  _s = $RefreshSig$();\n// AudioControls.js\nimport React, { useEffect, useRef } from \"react\";\nimport { useAudioContext } from \"../AudioContext\";\nimport \"./AudioControls.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioControls = () => {\n  _s();\n  const {\n    currentTrack,\n    isPlaying,\n    volume,\n    nextTrack,\n    setCurrentTrack,\n    setIsPlaying,\n    setNextTrack,\n    setVolume\n  } = useAudioContext();\n  const audioRef = useRef(null);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = volume;\n      audioRef.current.addEventListener(\"ended\", () => {\n        if (nextTrack) {\n          setCurrentTrack(nextTrack);\n          setNextTrack(null);\n        }\n      });\n    }\n  }, [currentTrack, volume, nextTrack, setCurrentTrack, setNextTrack]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-controls\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioControls, \"Z4S7SqokR73BZ7Ld41pCupQbNUk=\", false, function () {\n  return [useAudioContext];\n});\n_c = AudioControls;\nexport default AudioControls;\nvar _c;\n$RefreshReg$(_c, \"AudioControls\");","map":{"version":3,"names":["React","useEffect","useRef","useAudioContext","jsxDEV","_jsxDEV","AudioControls","_s","currentTrack","isPlaying","volume","nextTrack","setCurrentTrack","setIsPlaying","setNextTrack","setVolume","audioRef","current","addEventListener","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/audioControls/AudioControls.jsx"],"sourcesContent":["// AudioControls.js\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { useAudioContext } from \"../AudioContext\"; \r\nimport \"./AudioControls.css\";\r\n\r\nconst AudioControls = () => {\r\n  const {\r\n    currentTrack,\r\n    isPlaying,\r\n    volume,\r\n    nextTrack,\r\n    setCurrentTrack,\r\n    setIsPlaying,\r\n    setNextTrack,\r\n    setVolume,\r\n  } = useAudioContext();\r\n  const audioRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (audioRef.current) {\r\n      audioRef.current.volume = volume;\r\n      audioRef.current.addEventListener(\"ended\", () => {\r\n        if (nextTrack) {\r\n          setCurrentTrack(nextTrack);\r\n          setNextTrack(null);\r\n        }\r\n      });\r\n    }\r\n  }, [currentTrack, volume, nextTrack, setCurrentTrack, setNextTrack]);\r\n\r\n  return (\r\n    <div className=\"audio-controls\">\r\n      {/* Остальной код */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioControls;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,eAAe,QAAQ,iBAAiB;AACjD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IACJC,YAAY;IACZC,SAAS;IACTC,MAAM;IACNC,SAAS;IACTC,eAAe;IACfC,YAAY;IACZC,YAAY;IACZC;EACF,CAAC,GAAGZ,eAAe,CAAC,CAAC;EACrB,MAAMa,QAAQ,GAAGd,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAIe,QAAQ,CAACC,OAAO,EAAE;MACpBD,QAAQ,CAACC,OAAO,CAACP,MAAM,GAAGA,MAAM;MAChCM,QAAQ,CAACC,OAAO,CAACC,gBAAgB,CAAC,OAAO,EAAE,MAAM;QAC/C,IAAIP,SAAS,EAAE;UACbC,eAAe,CAACD,SAAS,CAAC;UAC1BG,YAAY,CAAC,IAAI,CAAC;QACpB;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACN,YAAY,EAAEE,MAAM,EAAEC,SAAS,EAAEC,eAAe,EAAEE,YAAY,CAAC,CAAC;EAEpE,oBACET,OAAA;IAAKc,SAAS,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1B,CAAC;AAEV,CAAC;AAAChB,EAAA,CA9BID,aAAa;EAAA,QAUbH,eAAe;AAAA;AAAAqB,EAAA,GAVflB,aAAa;AAgCnB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}