{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\audioList\\\\AudioList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useAudioContext } from \"../AudioContext\";\nimport \"./AudioList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioList = () => {\n  _s();\n  const {\n    setCurrentTrack,\n    setIsPlaying\n  } = useAudioContext();\n  const [nextTrack, setNextTrack] = useState(null);\n  const audioRef = useRef(null);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/audio\", {\n      method: \"GET\"\n    }).then(response => response.json()).then(data => setAudioFiles(data)).catch(error => console.error(\"Error fetching data:\", error));\n  }, [nextTrack]);\n  const handlePlayAudio = async (audioId, trackName, author, imageUrl) => {\n    try {\n      const response = await fetch(`http://localhost:8080/audio/${audioId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const blob = await response.blob();\n      const audioData = URL.createObjectURL(new Blob([blob]));\n      setAudioFiles(audioFiles);\n      setCurrentTrack({\n        id: audioId,\n        audioUrl: audioData,\n        trackName,\n        author,\n        imageUrl\n      });\n      setIsPlaying(true);\n    } catch (error) {\n      console.error(\"Error fetching audio:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-list\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: audioFiles.map((audioFile, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-metadata-container\",\n          children: [audioFile.image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/jpeg;base64,${audioFile.image.data}`,\n            alt: audioFile.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"play_pause\",\n              onClick: () => handlePlayAudio(audioFile.id, audioFile.title, audioFile.author, `data:image/jpeg;base64,${audioFile.image.data}`, index),\n              children: \"Play\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: audioFile.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: audioFile.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"duration-conteiner\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"duration\",\n              children: audioFile.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, audioFile.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioList, \"hbcqOulo4x5WHPiz4GxvfyF2Jwc=\", false, function () {\n  return [useAudioContext];\n});\n_c = AudioList;\nexport default AudioList;\nvar _c;\n$RefreshReg$(_c, \"AudioList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAudioContext","jsxDEV","_jsxDEV","AudioList","_s","setCurrentTrack","setIsPlaying","nextTrack","setNextTrack","audioRef","fetch","method","then","response","json","data","setAudioFiles","catch","error","console","handlePlayAudio","audioId","trackName","author","imageUrl","ok","Error","status","blob","audioData","URL","createObjectURL","Blob","audioFiles","id","audioUrl","className","children","map","audioFile","index","image","src","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","duration","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/audioList/AudioList.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useAudioContext } from \"../AudioContext\";\r\nimport \"./AudioList.css\";\r\n\r\nconst AudioList = () => {\r\n  const { setCurrentTrack, setIsPlaying } = useAudioContext();\r\n  const [nextTrack, setNextTrack] = useState(null);\r\n  const audioRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/audio\", { method: \"GET\" })\r\n      .then((response) => response.json())\r\n      .then((data) => setAudioFiles(data))\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n  }, [nextTrack]);\r\n\r\n  const handlePlayAudio = async (audioId, trackName, author, imageUrl) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/audio/${audioId}`);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const blob = await response.blob();\r\n      const audioData = URL.createObjectURL(new Blob([blob]));\r\n\r\n      setAudioFiles(audioFiles);\r\n      setCurrentTrack({\r\n        id: audioId,\r\n        audioUrl: audioData,\r\n        trackName,\r\n        author,\r\n        imageUrl,\r\n      });\r\n      setIsPlaying(true);\r\n    } catch (error) {\r\n      console.error(\"Error fetching audio:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"audio-list\">\r\n      <ul>\r\n        {audioFiles.map((audioFile, index) => (\r\n          <li key={audioFile.id}>\r\n            <div className=\"audio-metadata-container\">\r\n              {audioFile.image && (\r\n                <img\r\n                  src={`data:image/jpeg;base64,${audioFile.image.data}`}\r\n                  alt={audioFile.title}\r\n                />\r\n              )}\r\n              <div className=\"button-container\">\r\n                <button\r\n                  className=\"play_pause\"\r\n                  onClick={() =>\r\n                    handlePlayAudio(\r\n                      audioFile.id,\r\n                      audioFile.title,\r\n                      audioFile.author,\r\n                      `data:image/jpeg;base64,${audioFile.image.data}`,\r\n                      index \r\n                    )\r\n                  }\r\n                >\r\n                  Play\r\n                </button>\r\n              </div>\r\n              <div className=\"title-author-container\">\r\n                <span className=\"title\">{audioFile.title}</span>\r\n                <span>{audioFile.author}</span>\r\n              </div>\r\n              <div className=\"duration-conteiner\">\r\n                <span className=\"duration\">{audioFile.duration}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}