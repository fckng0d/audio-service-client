{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0412\\u044F\\u0442\\u0413\\u0423\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\\\u0421\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440 4\\\\Web\\\\\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\audio-service\\\\audio-service-client\\\\src\\\\components\\\\audioList\\\\AudioList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useAudioContext } from \"../AudioContext\";\nimport \"./AudioList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioList = () => {\n  _s();\n  const {\n    setCurrentTrack,\n    isPlaying,\n    togglePlay,\n    setIsPlaying,\n    currentTrackIndex,\n    setCurrentTrackIndex,\n    updateAudioFiles,\n    audioFiles,\n    audioRef\n  } = useAudioContext();\n  const [images, setImages] = useState({});\n  useEffect(() => {\n    if (currentTrackIndex === -1) {\n      fetch(\"http://localhost:8080/api/audio\", {\n        method: \"GET\"\n      }).then(response => response.json()).then(data => {\n        updateAudioFiles(data);\n        preloadImages(data);\n      }).catch(error => console.error(\"Error fetching data:\", error));\n    }\n  }, [isPlaying]);\n  const preloadImages = async data => {\n    const promises = data.map(async audioFile => {\n      if (audioFile.image) {\n        try {\n          const response = await fetch(`http://localhost:8080/api/audio/${audioFile.id}/image`);\n          if (response.ok) {\n            const blob = await response.blob();\n            const imageData = URL.createObjectURL(blob);\n            setImages(prevImages => ({\n              ...prevImages,\n              [audioFile.id]: imageData\n            }));\n          }\n        } catch (error) {\n          console.error(\"Error fetching image:\", error);\n        }\n      }\n    });\n    await Promise.all(promises);\n  };\n  const handleTogglePlay = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    togglePlay();\n  };\n  const handlePlayAudio = async (audioFile, index) => {\n    if (currentTrackIndex === index) {\n      handleTogglePlay();\n    } else {\n      try {\n        const response = await fetch(`http://localhost:8080/api/audio/${audioFile.id}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const blob = await response.blob();\n        const audioData = URL.createObjectURL(new Blob([blob]));\n        setCurrentTrackIndex(index);\n        setCurrentTrack({\n          id: audioFile.id,\n          audioUrl: audioData,\n          trackName: audioFile.title,\n          author: audioFile.author,\n          imageUrl: audioFile.image && images[audioFile.id],\n          duration: audioFile.duration\n        });\n        setIsPlaying(true);\n      } catch (error) {\n        console.error(\"Error fetching audio:\", error);\n      }\n    }\n  };\n  function formatDuration(duration) {\n    const hours = Math.floor(duration / 3600);\n    const minutes = Math.floor(duration % 3600 / 60);\n    const seconds = Math.floor(duration % 60);\n    let formattedTime = \"\";\n    if (hours > 0) {\n      formattedTime += hours + \":\";\n    }\n    if (hours > 0 && minutes < 10) {\n      formattedTime += \"0\";\n    }\n    formattedTime += String(minutes).padStart(hours > 0 ? 2 : 1, \"0\") + \":\";\n    formattedTime += String(seconds).padStart(2, \"0\");\n    return formattedTime;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-list\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: audioFiles.map((audioFile, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-metadata-container\",\n          children: [audioFile.image && images[audioFile.id] && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: images[audioFile.id],\n            alt: audioFile.title,\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"play_pause\",\n              onClick: () => handlePlayAudio(audioFile, index),\n              children: currentTrackIndex === index && isPlaying ? \"||\" : \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-author-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: audioFile.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: audioFile.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"duration-container\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"duration\",\n              children: formatDuration(audioFile.duration)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, audioFile.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioList, \"Rgub797lLa4y/+6qA+P9nhnuevI=\", false, function () {\n  return [useAudioContext];\n});\n_c = AudioList;\nexport default AudioList;\nvar _c;\n$RefreshReg$(_c, \"AudioList\");","map":{"version":3,"names":["React","useEffect","useState","useAudioContext","jsxDEV","_jsxDEV","AudioList","_s","setCurrentTrack","isPlaying","togglePlay","setIsPlaying","currentTrackIndex","setCurrentTrackIndex","updateAudioFiles","audioFiles","audioRef","images","setImages","fetch","method","then","response","json","data","preloadImages","catch","error","console","promises","map","audioFile","image","id","ok","blob","imageData","URL","createObjectURL","prevImages","Promise","all","handleTogglePlay","current","pause","play","handlePlayAudio","index","Error","status","audioData","Blob","audioUrl","trackName","title","author","imageUrl","duration","formatDuration","hours","Math","floor","minutes","seconds","formattedTime","String","padStart","className","children","src","alt","loading","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Файлы/ВятГУ/2 курс/Семестр 4/Web/курсач/audio-service/audio-service-client/src/components/audioList/AudioList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useAudioContext } from \"../AudioContext\";\r\nimport \"./AudioList.css\";\r\n\r\nconst AudioList = () => {\r\n  const {\r\n    setCurrentTrack,\r\n    isPlaying,\r\n    togglePlay,\r\n    setIsPlaying,\r\n    currentTrackIndex,\r\n    setCurrentTrackIndex,\r\n    updateAudioFiles,\r\n    audioFiles,\r\n    audioRef,\r\n  } = useAudioContext();\r\n\r\n  const [images, setImages] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (currentTrackIndex === -1) {\r\n      fetch(\"http://localhost:8080/api/audio\", { method: \"GET\" })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          updateAudioFiles(data);\r\n          preloadImages(data);\r\n        })\r\n        .catch((error) => console.error(\"Error fetching data:\", error));\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  const preloadImages = async (data) => {\r\n    const promises = data.map(async (audioFile) => {\r\n      if (audioFile.image) {\r\n        try {\r\n          const response = await fetch(\r\n            `http://localhost:8080/api/audio/${audioFile.id}/image`\r\n          );\r\n          if (response.ok) {\r\n            const blob = await response.blob();\r\n            const imageData = URL.createObjectURL(blob);\r\n            setImages((prevImages) => ({\r\n              ...prevImages,\r\n              [audioFile.id]: imageData,\r\n            }));\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching image:\", error);\r\n        }\r\n      }\r\n    });\r\n    await Promise.all(promises);\r\n  };\r\n\r\n  const handleTogglePlay = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n    } else {\r\n      audioRef.current.play();\r\n    }\r\n    togglePlay();\r\n  };\r\n\r\n  const handlePlayAudio = async (audioFile, index) => {\r\n    if (currentTrackIndex === index) {\r\n      handleTogglePlay();\r\n    } else {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:8080/api/audio/${audioFile.id}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const blob = await response.blob();\r\n        const audioData = URL.createObjectURL(new Blob([blob]));\r\n\r\n        setCurrentTrackIndex(index);\r\n        setCurrentTrack({\r\n          id: audioFile.id,\r\n          audioUrl: audioData,\r\n          trackName: audioFile.title,\r\n          author: audioFile.author,\r\n          imageUrl: audioFile.image && images[audioFile.id],\r\n          duration: audioFile.duration,\r\n        });\r\n        setIsPlaying(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching audio:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  function formatDuration(duration) {\r\n    const hours = Math.floor(duration / 3600);\r\n    const minutes = Math.floor((duration % 3600) / 60);\r\n    const seconds = Math.floor(duration % 60);\r\n\r\n    let formattedTime = \"\";\r\n    if (hours > 0) {\r\n      formattedTime += hours + \":\";\r\n    }\r\n    if (hours > 0 && minutes < 10) {\r\n      formattedTime += \"0\";\r\n    }\r\n    formattedTime += String(minutes).padStart(hours > 0 ? 2 : 1, \"0\") + \":\";\r\n    formattedTime += String(seconds).padStart(2, \"0\");\r\n\r\n    return formattedTime;\r\n  }\r\n\r\n  return (\r\n    <div className=\"audio-list\">\r\n      <ul>\r\n        {audioFiles.map((audioFile, index) => (\r\n          <li key={audioFile.id}>\r\n            <div className=\"audio-metadata-container\">\r\n              {audioFile.image && images[audioFile.id] && (\r\n                <img\r\n                  src={images[audioFile.id]}\r\n                  alt={audioFile.title}\r\n                  loading=\"lazy\"\r\n                />\r\n              )}\r\n              <div className=\"button-container\">\r\n                <button\r\n                  className=\"play_pause\"\r\n                  onClick={() => handlePlayAudio(audioFile, index)}\r\n                >\r\n                  {currentTrackIndex === index && isPlaying ? \"||\" : \">\"}\r\n                </button>\r\n              </div>\r\n              <div className=\"title-author-container\">\r\n                <span className=\"title\">{audioFile.title}</span>\r\n                <span>{audioFile.author}</span>\r\n              </div>\r\n              <div className=\"duration-container\">\r\n                <span className=\"duration\">\r\n                  {formatDuration(audioFile.duration)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}